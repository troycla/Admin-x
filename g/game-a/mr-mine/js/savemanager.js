const INTEGER_SAVE_VALUE=1,FLOAT_SAVE_VALUE=2,STRING_SAVE_VALUE=3,INT_ARRAY_SAVE_VALUE=4,STRING_ARRAY_SAVE_VALUE=5,BOOLEAN_SAVE_VALUE=6,BOOL_ARRAY_SAVE_VALUE=7,BIG_INTEGER_SAVE_VALUE=8,RAW_INTEGER_SAVE_VALUE=9,JSON_SAVE_VALUE=10,BIG_NUMBER_SAVE_VALUE=11;var variableRegistry=[];function registerVariable(e,r){variableRegistry.push([e,r])}function registerInteger(e){registerVariable(e,INTEGER_SAVE_VALUE)}function registerFloat(e){registerVariable(e,FLOAT_SAVE_VALUE)}function registerString(e){registerVariable(e,STRING_SAVE_VALUE)}function registerIntArray(e){registerVariable(e,INT_ARRAY_SAVE_VALUE)}function registerStringArray(e){registerVariable(e,STRING_ARRAY_SAVE_VALUE)}function registerBoolean(e){registerVariable(e,BOOLEAN_SAVE_VALUE)}function registerBooleanArray(e){registerVariable(e,BOOL_ARRAY_SAVE_VALUE)}function registerBigNumber(e){registerVariable(e,BIG_NUMBER_SAVE_VALUE)}function registerRawInteger(e){registerVariable(e,RAW_INTEGER_SAVE_VALUE)}function registerJson(e){registerVariable(e,JSON_SAVE_VALUE)}function getVariableFormat(e){for(var r=0;r<variableRegistry.length;r++)if(variableRegistry[r][0]==e)return variableRegistry[r][1]}function loadVariable(chosenSave,index){if(variableRegistry.length>index&&saves[chosenSave].length>index){var variableName=variableRegistry[index][0],variableFormat=variableRegistry[index][1],loadedValue=saves[chosenSave][index];switch(loadedValue=migrateVariable(loadedValue),variableFormat){case INTEGER_SAVE_VALUE:console.log(variableName+" = "+parseInt(loadedValue)),eval(variableName+" = "+parseInt(loadedValue));break;case FLOAT_SAVE_VALUE:eval(variableName+" = "+parseFloat(loadedValue));break;case STRING_SAVE_VALUE:console.log(variableName+" = "+loadedValue),eval(variableName+' = "'+loadedValue+'"');break;case INT_ARRAY_SAVE_VALUE:var newValue=loadedValue.split("!");eval(variableName+" = ["+loadedValue.split("!")+"]");for(var i=0;i<newValue.length;i++)null!=newValue[i]&&""!=newValue[i]&&(console.log(variableName+"["+i+"] = "+newValue[i]),eval(variableName+"["+i+"] = "+newValue[i]));break;case STRING_ARRAY_SAVE_VALUE:eval(variableName+' = ["'+loadedValue.split("!").join('","')+'"]');break;case BOOLEAN_SAVE_VALUE:var newValue="1"==loadedValue||1==loadedValue;console.log(variableName+" = "+newValue),eval(variableName+" = "+newValue);break;case BOOL_ARRAY_SAVE_VALUE:var newValue=loadedValue.split("");eval(variableName+" = ["+loadedValue.split("")+"]");for(var i=0;i<newValue.length;i++)null!=newValue[i]&&""!=newValue&&eval(variableName+"["+i+"] = "+("1"==newValue[i]||1==newValue[i]));break;case BIG_NUMBER_SAVE_VALUE:loadedValue.includes(".")&&(loadedValue=loadedValue.substring(0,loadedValue.indexOf("."))),console.log(variableName+" = "+loadedValue),eval(variableName+" = new BigNumber("+loadedValue+")");break;case RAW_INTEGER_SAVE_VALUE:console.log(variableName+" = "+loadedValue),eval(variableName+" = "+loadedValue);break;case JSON_SAVE_VALUE:console.log(variableName+" =  "+loadedValue),eval(variableName+" = "+loadedValue);break;default:return console.warn("Unrecognized variable type @ "+index),alert("Unrecognized variable type"),""}}else variableRegistry.length<=index?console.warn("Was unable to load save value at index: "+index+" (Registry is not long enough, register the variable to save it)"):saves[chosenSave].length<=index?console.warn("Was unable to load save value at index: "+index+" (Save data does not contain it, this may be fixed after the next load and is likely due to a variable being added and the save being out of date)"):console.warn("An error occured @ index: "+index)}function getFormattedVariableForSave(variableName){var variableFormat=getVariableFormat(variableName);switch(variableFormat){case INTEGER_SAVE_VALUE:case FLOAT_SAVE_VALUE:return String(eval(variableName));case STRING_SAVE_VALUE:return eval(variableName);case INT_ARRAY_SAVE_VALUE:case STRING_ARRAY_SAVE_VALUE:return String(eval(variableName+".join('!')"));case BOOLEAN_SAVE_VALUE:return eval(variableName)?"1":"0";case BOOL_ARRAY_SAVE_VALUE:for(var value=eval(variableName),result="",i=0;i<value.length;i++)value[i]?result+="1":result+="0";return result;case BIG_NUMBER_SAVE_VALUE:return eval(variableName).toString();case RAW_INTEGER_SAVE_VALUE:return String(eval(variableName));case JSON_SAVE_VALUE:return JSON.stringify(eval(variableName));default:return console.warn("Unrecognized variable type"),alert("Unrecognized variable type"),""}}function migrateVariable(e){return replaceAll(e,'"',"")}function loadAllVariables(e){for(var r=0;r<variableRegistry.length;r++)try{loadVariable(e,r)}catch(i){var t=variableRegistry[r][0];console.error("Failed to load variable '"+t+"'. Saved value = "+saves[e][r]+" ("+i.message+")",i.stack)}runPostLoadingFixes()}function runPostLoadingFixes(){for(var e in"boolean"!=typeof paidForMinerName&&(paidForMinerName=!1,customMinerDatabaseIndex>=0?paidForMinerName=!0:centsSpent>=5e3&&handleNameSubmission()),isNaN(specialUpgrades[0])&&(specialUpgrades[0]=0),(money.isNaN()||money.lessThan(0))&&(money=new BigNumber(0)),worldResources)(isNaN(worldResources[e].numOwned)||worldResources[e].numOwned<0)&&(worldResources[e].numOwned=0),isNaN(lockedMineralAmtsToSave[e])&&(lockedMineralAmtsToSave[e]=0);for(isNaN(totalCompletedTrades)&&(totalCompletedTrades=0,earthTradeOffer1=[],earthTradeOffer2=[],singleMiningLoopValueSnapshot=[],nextTradeTimeEarth=Math.floor(playtime+120));lockedMineralAmtsToSave.length<worldResources.length;)lockedMineralAmtsToSave.push(0);for(var e in drillEquips[64].isCrafted>1&&(drillEquips[64].isCrafted=!1),quest)isNaN(quest[e])&&(quest[e]=0);if(drones.forEach((e=>{e.level>e.maxLevel&&(e.level=e.maxLevel)})),unseenBlueprints=filterLowLevelDrillBlueprints(unseenBlueprints),oldversion<116)for(var r=getKnownBlueprints(),t=filterBlueprintsByCategory(r,1),i=filterBlueprints(t,(function(e){return e.isFromShop&&e.craftedItem.item.canCraft()})),s=0;s<i.length;s++)addMoney(i[s].price),newNews(_("You were credited the ${0} you spent on {1} as money is now part of crafting",i[s].price,i[s].name),!0);if(learnReachedStructures(),console.log("old version: "+oldversion),oldversion<118){var n=specialUpgrades[0],a=specialUpgrades[1];metalDetectorStructure.level<n&&(metalDetectorStructure.level=n),managerStructure.level<a&&(managerStructure.level=a),depth>=20&&0==tradingPostStructure.level&&(tradingPostStructure.level=1),depth>=1052&&0==moonTradingPostStructure.level&&(moonTradingPostStructure.level=1),117==oldversion&&depth>=buffLabStructure.depthAvailable&&buffLabStructure.level++,console.log(buffLabStructure.level),0==buffLabStructure.level&&(buffLabStructure.level=1,console.log("Updating"));var o=Math.floor(depth/10);o>0&&(worldResources[BUILDING_MATERIALS_INDEX].numOwned+=o,newNews(_("Structures are now upgraded through crafting."),!0),newNews(_("You received {0} building materials",o),!0))}if(119==oldversion)for(s=0;s<buffs.activeBuffs.length;s++)4==buffs.activeBuffs[s].id&&20==buffs.activeBuffs[s].statBuffAmount&&(buffs.activeBuffs[s].statBuffAmount=100);if(earthTradeOffer1.length>7&&void 0!==earthTradeOffer1[TRADE_INDEX_PAYMENT_AMOUNT]&&void 0!==earthTradeOffer1[TRADE_INDEX_REWARD_AMOUNT]&&(earthTradeOffer1[TRADE_INDEX_PAYMENT_AMOUNT]=new BigNumber(earthTradeOffer1[TRADE_INDEX_PAYMENT_AMOUNT]),earthTradeOffer1[TRADE_INDEX_REWARD_AMOUNT]=new BigNumber(earthTradeOffer1[TRADE_INDEX_REWARD_AMOUNT])),earthTradeOffer2.length>7&&void 0!==earthTradeOffer2[TRADE_INDEX_PAYMENT_AMOUNT]&&void 0!==earthTradeOffer2[TRADE_INDEX_REWARD_AMOUNT]&&(earthTradeOffer2[TRADE_INDEX_PAYMENT_AMOUNT]=new BigNumber(earthTradeOffer2[TRADE_INDEX_PAYMENT_AMOUNT]),earthTradeOffer2[TRADE_INDEX_REWARD_AMOUNT]=new BigNumber(earthTradeOffer2[TRADE_INDEX_REWARD_AMOUNT])),moonTradeOffer1.length>7&&void 0!==moonTradeOffer1[TRADE_INDEX_PAYMENT_AMOUNT]&&void 0!==moonTradeOffer1[TRADE_INDEX_REWARD_AMOUNT]&&(moonTradeOffer1[TRADE_INDEX_PAYMENT_AMOUNT]=new BigNumber(moonTradeOffer1[TRADE_INDEX_PAYMENT_AMOUNT]),moonTradeOffer1[TRADE_INDEX_REWARD_AMOUNT]=new BigNumber(moonTradeOffer1[TRADE_INDEX_REWARD_AMOUNT])),moonTradeOffer2.length>7&&void 0!==moonTradeOffer2[TRADE_INDEX_PAYMENT_AMOUNT]&&void 0!==moonTradeOffer2[TRADE_INDEX_REWARD_AMOUNT]&&(moonTradeOffer2[TRADE_INDEX_PAYMENT_AMOUNT]=new BigNumber(moonTradeOffer2[TRADE_INDEX_PAYMENT_AMOUNT]),moonTradeOffer2[TRADE_INDEX_REWARD_AMOUNT]=new BigNumber(moonTradeOffer2[TRADE_INDEX_REWARD_AMOUNT])),oldversion<124){for(s=0;s<quest.length;s++)quest[s]>=1&&(questManager.getQuest(s).isComplete=!0),2==quest[s]&&(questManager.getQuest(s).isCollected=!0);chestService.migrateDeprecatedChestStorage(),reactorComponents[25].numOwned>100&&(reactorComponents[25].numOwned=Math.floor(reactorComponents[25].numOwned/2.5)),depth>1132&&chestCompressorStructure.level<1&&(chestCompressorStructure.level=1,learnBlueprint(3,12),newNews(_("Discovered the Chest Compressor!")))}initAvailableBlueprints();for(s=0;s<DeprecatedBlueprints.length;s++)DeprecatedBlueprints[s][8]>0&&learnBlueprint(1,s,!1),drillEquips[s+4].isCrafted&&(hasCraftedABlueprint=!0);for(s=0;s<battleInventory.length;s++)if(battleInventory[s].length>0){1==battleInventory[s][6]&&(battleInventory[s][5]=0,battleInventory[s][6]=0,battleInventory[s][4]++,newNews(battleEquipStats[battleInventory[s][0]][3]+" "+_("Upgraded to Lvl")+" "+battleInventory[s][4],!0));var l=battleInventory[s][0];try{makeBlueprintAvailable(2,l),learnBlueprint(2,l)}catch(e){console.warn(e),battleInventory[s]=[]}}isNaN(hasUnlockedScientists)&&(hasUnlockedScientists=1),oilrigStructure.level>oilrigStructure.maxLevel&&(oilrigStructure.level=oilrigStructure.maxLevel),oldversion=version,previousPlatform=lastPlatform,lastPlatform=platformName(),(null==UID||UID<100||isNaN(UID))&&(UID=platform.getUserId());for(s=0;s<superMinerManager.numSuperMiners();s++){let e=superMinerManager.currentSuperMiners[s],r=superMinerManager.currentSuperMiners[s].currentDepth,t=superMinerManager.currentSuperMiners[s].targetDepth;e&&void 0!==r&&void 0!==t&&(r>depth||r<-1||isNaN(r)||t>depth||t<-1||isNaN(t))&&(superMinerManager.currentSuperMiners[s].setToRandomDepth(0,depth),superMinerManager.currentSuperMiners[s].targetDepth=-1,superMinerManager.currentSuperMiners[s].handleMovement())}for(s=0;s<buffs.activeBuffs.length;s++)"BuffMiner"==buffs.activeBuffs[s].startSource&&(0==buffs.activeBuffs[s].id&&buffs.activeBuffs[s].millisecondsRemaining>6e4?buffs.activeBuffs[s].millisecondsRemaining=6e4:9==buffs.activeBuffs[s].id&&buffs.activeBuffs[s].millisecondsRemaining>3e5&&(buffs.activeBuffs[s].millisecondsRemaining=3e5));limitedTimeEventManager.activeEventType!=EVENT_NONE&&limitedTimeEventManager.activeEventType==previouslyActiveHolidayIndex||(worldResources[HOLIDAY_RESOURCE_INDEX].numOwned=0,previouslyActiveHolidayIndex=limitedTimeEventManager.activeEventType),hasTakenSurvey&&loadAmountOfFlashQuestions()}function generateSaveText(){for(var e=[],r=0;r<variableRegistry.length;r++)e.push(getFormattedVariableForSave(variableRegistry[r][0]));return e.join("|")}function generateDiffTest(){var e=utf8_to_b64(generateSaveText()),r=getB64SaveText();console.log(e),console.log(r),e==r?console.log("same"):console.log("different")}var isSaveMappingSet=!1,NO_LONGER_IN_USE;function registerVariablesToSave(){registerBigNumber("money"),registerInteger("depth"),registerBigNumber("progressTowardsNextDepth"),registerInteger("UID"),registerInteger("drillState.equippedDrillEquips[0]"),registerInteger("drillState.equippedDrillEquips[1]"),registerInteger("drillState.equippedDrillEquips[2]"),registerInteger("drillState.equippedDrillEquips[3]"),registerInteger("worlds[0].workersHired"),registerInteger("oldversion"),registerInteger("worldResources[1].numOwned"),registerInteger("worldResources[2].numOwned"),registerInteger("worldResources[3].numOwned"),registerInteger("worldResources[4].numOwned"),registerInteger("worldResources[5].numOwned"),registerInteger("worldResources[6].numOwned"),registerInteger("worldResources[7].numOwned"),registerInteger("worldResources[8].numOwned"),registerInteger("worldResources[9].numOwned"),registerInteger("worldResources[10].numOwned"),registerInteger("worldResources[11].numOwned"),registerInteger("worldResources[12].numOwned"),registerInteger("worldResources[13].numOwned"),registerInteger("worldResources[14].numOwned"),registerInteger("worldResources[15].numOwned"),registerInteger("worldResources[16].numOwned"),registerInteger("worldResources[17].numOwned"),registerInteger("NO_LONGER_IN_USE"),registerInteger("NO_LONGER_IN_USE"),registerInteger("NO_LONGER_IN_USE"),registerInteger("NO_LONGER_IN_USE"),registerInteger("worldResources[18].numOwned"),registerInteger("worldResources[19].numOwned"),registerInteger("worldResources[20].numOwned"),registerInteger("NO_LONGER_IN_USE"),registerInteger("worldResources[21].numOwned"),registerInteger("worldResources[22].numOwned"),registerInteger("worldResources[23].numOwned"),registerInteger("NO_LONGER_IN_USE"),registerInteger("worldResources[24].numOwned"),registerInteger("worldResources[25].numOwned"),registerInteger("worldResources[26].numOwned"),registerIntArray("inventory[0]"),registerIntArray("inventory[1]"),registerIntArray("inventory[2]"),registerIntArray("inventory[3]"),registerIntArray("inventory[4]"),registerInteger("DeprecatedBlueprints[0][8]"),registerBoolean("drillEquips[4].isCrafted"),registerInteger("DeprecatedBlueprints[1][8]"),registerBoolean("drillEquips[5].isCrafted"),registerInteger("DeprecatedBlueprints[2][8]"),registerBoolean("drillEquips[6].isCrafted"),registerInteger("DeprecatedBlueprints[3][8]"),registerBoolean("drillEquips[7].isCrafted"),registerInteger("DeprecatedBlueprints[4][8]"),registerBoolean("drillEquips[8].isCrafted"),registerInteger("DeprecatedBlueprints[5][8]"),registerBoolean("drillEquips[9].isCrafted"),registerInteger("DeprecatedBlueprints[6][8]"),registerBoolean("drillEquips[10].isCrafted"),registerInteger("DeprecatedBlueprints[7][8]"),registerBoolean("drillEquips[11].isCrafted"),registerInteger("DeprecatedBlueprints[8][8]"),registerBoolean("drillEquips[12].isCrafted"),registerInteger("DeprecatedBlueprints[9][8]"),registerBoolean("drillEquips[13].isCrafted"),registerInteger("DeprecatedBlueprints[10][8]"),registerBoolean("drillEquips[14].isCrafted"),registerInteger("DeprecatedBlueprints[11][8]"),registerBoolean("drillEquips[15].isCrafted"),registerInteger("DeprecatedBlueprints[12][8]"),registerBoolean("drillEquips[16].isCrafted"),registerInteger("DeprecatedBlueprints[13][8]"),registerBoolean("drillEquips[17].isCrafted"),registerInteger("DeprecatedBlueprints[14][8]"),registerBoolean("drillEquips[18].isCrafted"),registerInteger("DeprecatedBlueprints[15][8]"),registerBoolean("drillEquips[19].isCrafted"),registerInteger("DeprecatedBlueprints[16][8]"),registerBoolean("drillEquips[20].isCrafted"),registerInteger("playtime"),registerIntArray("quest"),registerInteger("DeprecatedBlueprints[17][8]"),registerBoolean("drillEquips[21].isCrafted"),registerInteger("DeprecatedBlueprints[18][8]"),registerBoolean("drillEquips[22].isCrafted"),registerInteger("DeprecatedBlueprints[19][8]"),registerBoolean("drillEquips[23].isCrafted"),registerInteger("DeprecatedBlueprints[20][8]"),registerBoolean("drillEquips[24].isCrafted"),registerInteger("DeprecatedBlueprints[21][8]"),registerBoolean("drillEquips[25].isCrafted"),registerInteger("DeprecatedBlueprints[22][8]"),registerBoolean("drillEquips[26].isCrafted"),registerInteger("DeprecatedBlueprints[23][8]"),registerBoolean("drillEquips[27].isCrafted"),registerInteger("DeprecatedBlueprints[24][8]"),registerBoolean("drillEquips[28].isCrafted"),registerInteger("DeprecatedBlueprints[25][8]"),registerBoolean("drillEquips[29].isCrafted"),registerInteger("DeprecatedBlueprints[26][8]"),registerBoolean("drillEquips[30].isCrafted"),registerInteger("DeprecatedBlueprints[27][8]"),registerBoolean("drillEquips[31].isCrafted"),registerInteger("DeprecatedBlueprints[28][8]"),registerBoolean("drillEquips[32].isCrafted"),registerInteger("DeprecatedBlueprints[29][8]"),registerBoolean("drillEquips[33].isCrafted"),registerInteger("DeprecatedBlueprints[30][8]"),registerBoolean("drillEquips[34].isCrafted"),registerInteger("DeprecatedBlueprints[31][8]"),registerBoolean("drillEquips[35].isCrafted"),registerInteger("worlds[0].workerLevel"),registerIntArray("specialUpgrades"),registerInteger("tickets"),registerInteger("DeprecatedBlueprints[32][8]"),registerBoolean("drillEquips[36].isCrafted"),registerInteger("DeprecatedBlueprints[33][8]"),registerBoolean("drillEquips[37].isCrafted"),registerInteger("DeprecatedBlueprints[34][8]"),registerBoolean("drillEquips[38].isCrafted"),registerInteger("DeprecatedBlueprints[35][8]"),registerBoolean("drillEquips[39].isCrafted"),registerInteger("DeprecatedBlueprints[36][8]"),registerBoolean("drillEquips[40].isCrafted"),registerInteger("DeprecatedBlueprints[37][8]"),registerBoolean("drillEquips[41].isCrafted"),registerInteger("DeprecatedBlueprints[38][8]"),registerBoolean("drillEquips[42].isCrafted"),registerInteger("DeprecatedBlueprints[39][8]"),registerBoolean("drillEquips[43].isCrafted"),registerInteger("camefrom"),registerInteger("savetime"),registerInteger("story"),registerInteger("worldResources[33].numOwned"),registerInteger("monsterskilled"),registerIntArray("battleInventory[0]"),registerIntArray("battleInventory[1]"),registerIntArray("battleInventory[2]"),registerIntArray("battleInventory[3]"),registerIntArray("battleInventory[4]"),registerIntArray("battleInventory[5]"),registerIntArray("battleInventory[6]"),registerIntArray("battleInventory[7]"),registerIntArray("battleInventory[8]"),registerIntArray("battleInventory[9]"),registerIntArray("battleInventory[10]"),registerIntArray("battleInventory[11]"),registerIntArray("battleInventory[12]"),registerIntArray("battleInventory[13]"),registerIntArray("battleInventory[14]"),registerInteger("oilrigStructure.level"),registerInteger("oilRigTime"),registerInteger("hasUnlockedScientists"),registerInteger("maxRelicSlots"),registerIntArray("equippedRelics"),registerIntArray("activeScientists[0]"),registerIntArray("activeScientists[1]"),registerIntArray("activeScientists[2]"),registerIntArray("activeExcavations[0]"),registerIntArray("activeExcavations[1]"),registerIntArray("activeExcavations[2]"),registerIntArray("excavationChoices[0][0]"),registerIntArray("excavationChoices[0][1]"),registerIntArray("excavationChoices[1][0]"),registerIntArray("excavationChoices[1][1]"),registerIntArray("excavationChoices[2][0]"),registerIntArray("excavationChoices[2][1]"),registerInteger("highestLevelScientist"),registerInteger("deadScientists"),registerInteger("numExcavationsCompleted"),registerInteger("bossesDefeated"),registerInteger("hasFoundGolem"),registerInteger("DeprecatedBlueprints[40][8]"),registerBoolean("drillEquips[44].isCrafted"),registerInteger("DeprecatedBlueprints[41][8]"),registerBoolean("drillEquips[45].isCrafted"),registerInteger("DeprecatedBlueprints[42][8]"),registerBoolean("drillEquips[46].isCrafted"),registerInteger("DeprecatedBlueprints[43][8]"),registerBoolean("drillEquips[47].isCrafted"),registerInteger("DeprecatedBlueprints[44][8]"),registerBoolean("drillEquips[48].isCrafted"),registerInteger("DeprecatedBlueprints[45][8]"),registerBoolean("drillEquips[49].isCrafted"),registerInteger("DeprecatedBlueprints[46][8]"),registerBoolean("drillEquips[50].isCrafted"),registerInteger("DeprecatedBlueprints[47][8]"),registerBoolean("drillEquips[51].isCrafted"),registerInteger("DeprecatedBlueprints[48][8]"),registerBoolean("drillEquips[52].isCrafted"),registerInteger("DeprecatedBlueprints[49][8]"),registerBoolean("drillEquips[53].isCrafted"),registerInteger("DeprecatedBlueprints[50][8]"),registerBoolean("drillEquips[54].isCrafted"),registerInteger("DeprecatedBlueprints[51][8]"),registerBoolean("drillEquips[55].isCrafted"),registerIntArray("lockedMineralAmtsToSave"),registerStringArray("redeemedCodes"),registerInteger("highestOreUnlocked"),registerInteger("highestIsotopeUnlocked"),registerBooleanArray("userExperienceBranchesTriggered"),registerInteger("totalCompletedTrades"),registerIntArray("earthTradeOffer1"),registerIntArray("singleMiningLoopValueSnapshot"),registerInteger("DeprecatedBlueprints[52][8]"),registerBoolean("drillEquips[56].isCrafted"),registerInteger("DeprecatedBlueprints[53][8]"),registerBoolean("drillEquips[57].isCrafted"),registerInteger("DeprecatedBlueprints[54][8]"),registerBoolean("drillEquips[58].isCrafted"),registerInteger("DeprecatedBlueprints[55][8]"),registerBoolean("drillEquips[59].isCrafted"),registerInteger("DeprecatedBlueprints[56][8]"),registerBoolean("drillEquips[60].isCrafted"),registerInteger("DeprecatedBlueprints[57][8]"),registerBoolean("drillEquips[61].isCrafted"),registerInteger("DeprecatedBlueprints[58][8]"),registerBoolean("drillEquips[62].isCrafted"),registerInteger("DeprecatedBlueprints[59][8]"),registerBoolean("drillEquips[63].isCrafted"),registerInteger("DeprecatedBlueprints[60][8]"),registerBoolean("drillEquips[64].isCrafted"),registerIntArray("earthTradeOffer2"),registerInteger("nextTradeTimeEarth"),registerBoolean("tradeConfig.tradingPosts[0].playerHasSeenNewTrade"),registerIntArray("backpack"),registerStringArray("knownBlueprints"),registerInteger("worlds[1].workersHired"),registerInteger("worlds[1].workerLevel"),registerStringArray("availableBlueprints"),registerStringArray("unseenBlueprints"),registerInteger("hasLaunched"),registerBoolean("hasCraftedABlueprint"),registerInteger("hasFoundGidget"),registerInteger("DeprecatedBlueprints[61][8]"),registerBoolean("drillEquips[65].isCrafted"),registerInteger("DeprecatedBlueprints[62][8]"),registerBoolean("drillEquips[66].isCrafted"),registerInteger("DeprecatedBlueprints[63][8]"),registerBoolean("drillEquips[67].isCrafted"),registerInteger("DeprecatedBlueprints[64][8]"),registerBoolean("drillEquips[68].isCrafted"),registerInteger("DeprecatedBlueprints[65][8]"),registerBoolean("drillEquips[69].isCrafted"),registerInteger("DeprecatedBlueprints[66][8]"),registerBoolean("drillEquips[70].isCrafted"),registerInteger("DeprecatedBlueprints[67][8]"),registerBoolean("drillEquips[71].isCrafted"),registerInteger("DeprecatedBlueprints[68][8]"),registerBoolean("drillEquips[72].isCrafted"),registerInteger("DeprecatedBlueprints[69][8]"),registerBoolean("drillEquips[73].isCrafted"),registerInteger("DeprecatedBlueprints[70][8]"),registerBoolean("drillEquips[74].isCrafted"),registerInteger("DeprecatedBlueprints[71][8]"),registerBoolean("drillEquips[75].isCrafted"),registerInteger("DeprecatedBlueprints[72][8]"),registerBoolean("drillEquips[76].isCrafted"),registerInteger("DeprecatedBlueprints[73][8]"),registerBoolean("drillEquips[77].isCrafted"),registerInteger("DeprecatedBlueprints[74][8]"),registerBoolean("drillEquips[78].isCrafted"),registerInteger("DeprecatedBlueprints[75][8]"),registerBoolean("drillEquips[79].isCrafted"),registerInteger("DeprecatedBlueprints[76][8]"),registerBoolean("drillEquips[80].isCrafted"),registerInteger("DeprecatedBlueprints[77][8]"),registerBoolean("drillEquips[81].isCrafted"),registerInteger("DeprecatedBlueprints[78][8]"),registerBoolean("drillEquips[82].isCrafted"),registerInteger("DeprecatedBlueprints[79][8]"),registerBoolean("drillEquips[83].isCrafted"),registerInteger("DeprecatedBlueprints[80][8]"),registerBoolean("drillEquips[84].isCrafted"),registerInteger("DeprecatedBlueprints[81][8]"),registerBoolean("drillEquips[85].isCrafted"),registerInteger("DeprecatedBlueprints[82][8]"),registerBoolean("drillEquips[86].isCrafted"),registerInteger("DeprecatedBlueprints[83][8]"),registerBoolean("drillEquips[87].isCrafted"),registerInteger("DeprecatedBlueprints[84][8]"),registerBoolean("drillEquips[88].isCrafted"),registerInteger("DeprecatedBlueprints[85][8]"),registerBoolean("drillEquips[89].isCrafted"),registerInteger("DeprecatedBlueprints[86][8]"),registerBoolean("drillEquips[90].isCrafted"),registerInteger("DeprecatedBlueprints[87][8]"),registerBoolean("drillEquips[91].isCrafted"),registerInteger("DeprecatedBlueprints[88][8]"),registerBoolean("drillEquips[92].isCrafted"),registerInteger("DeprecatedBlueprints[89][8]"),registerBoolean("drillEquips[93].isCrafted"),registerInteger("DeprecatedBlueprints[90][8]"),registerBoolean("drillEquips[94].isCrafted"),registerInteger("DeprecatedBlueprints[91][8]"),registerBoolean("drillEquips[95].isCrafted"),registerInteger("DeprecatedBlueprints[92][8]"),registerBoolean("drillEquips[96].isCrafted"),registerInteger("DeprecatedBlueprints[93][8]"),registerBoolean("drillEquips[97].isCrafted"),registerInteger("DeprecatedBlueprints[94][8]"),registerBoolean("drillEquips[98].isCrafted"),registerInteger("DeprecatedBlueprints[95][8]"),registerBoolean("drillEquips[99].isCrafted"),registerInteger("DeprecatedBlueprints[96][8]"),registerBoolean("drillEquips[100].isCrafted"),registerInteger("worldResources[27].numOwned"),registerInteger("worldResources[28].numOwned"),registerInteger("worldResources[29].numOwned"),registerInteger("worldResources[30].numOwned"),registerInteger("worldResources[31].numOwned"),registerInteger("worldResources[32].numOwned"),registerInteger("numGameLaunches"),registerStringArray("promosClicked"),registerInteger("lastTimeSeenPromo"),registerInteger("centsSpent"),registerInteger("quality"),registerInteger("customMinerDatabaseIndex"),registerInteger("nextTradeTimeMoon"),registerIntArray("moonTradeOffer1"),registerIntArray("moonTradeOffer2"),registerInteger("worldResources[34].numOwned"),registerInteger("worldResources[35].numOwned"),registerInteger("worldResources[36].numOwned"),registerInteger("worldResources[37].numOwned"),registerInteger("worldResources[38].numOwned"),registerInteger("worldResources[39].numOwned"),registerInteger("worldResources[40].numOwned"),registerInteger("worldResources[41].numOwned"),registerInteger("worldResources[42].numOwned"),registerInteger("worldResources[43].numOwned"),registerInteger("gemForgeStructure.level"),registerString("GemForger.queueSaveValue"),registerBoolean("areQuotesEnabled"),registerBoolean("tradeConfig.tradingPosts[1].playerHasSeenNewTrade"),registerInteger("mineralsSacrificed"),registerInteger("worldResources[44].numOwned"),registerBoolean("isCoreWarped"),registerBoolean("isCoreBlessed"),registerInteger("buffLabStructure.level"),registerInteger("reactorStructure.level"),registerIntArray("reactor.grid.grid[0]"),registerIntArray("reactor.grid.grid[1]"),registerIntArray("reactor.grid.grid[2]"),registerIntArray("reactor.grid.grid[3]"),registerIntArray("reactor.grid.grid[4]"),registerIntArray("reactor.grid.grid[5]"),registerIntArray("reactor.grid.grid[6]"),registerIntArray("reactor.grid.grid[7]"),registerIntArray("reactor.grid.grid[8]"),registerJson("reactor.grid.fuelCellRemainingEnergy"),registerInteger("reactorComponents[1].numOwned"),registerInteger("reactorComponents[2].numOwned"),registerInteger("reactorComponents[3].numOwned"),registerInteger("reactorComponents[4].numOwned"),registerInteger("reactorComponents[5].numOwned"),registerInteger("reactorComponents[6].numOwned"),registerInteger("reactorComponents[7].numOwned"),registerInteger("reactorComponents[8].numOwned"),registerInteger("reactorComponents[9].numOwned"),registerInteger("reactorComponents[10].numOwned"),registerInteger("reactorComponents[11].numOwned"),registerInteger("reactorComponents[12].numOwned"),registerInteger("reactorComponents[13].numOwned"),registerInteger("reactorComponents[14].numOwned"),registerInteger("reactorComponents[15].numOwned"),registerInteger("reactorComponents[16].numOwned"),registerInteger("reactorComponents[17].numOwned"),registerInteger("reactorComponents[18].numOwned"),registerInteger("worldResources[45].numOwned"),registerInteger("worldResources[46].numOwned"),registerInteger("worldResources[47].numOwned"),registerInteger("reactorComponents[19].numOwned"),registerInteger("reactorComponents[20].numOwned"),registerInteger("reactorComponents[21].numOwned"),registerInteger("chestService.totalBasicChestsOpened"),registerInteger("chestService.totalGoldChestsOpened"),registerInteger("totalMineralsMined"),registerInteger("DeprecatedBlueprints[97][8]"),registerBoolean("drillEquips[101].isCrafted"),registerInteger("DeprecatedBlueprints[98][8]"),registerBoolean("drillEquips[102].isCrafted"),registerInteger("DeprecatedBlueprints[99][8]"),registerBoolean("drillEquips[103].isCrafted"),registerInteger("DeprecatedBlueprints[100][8]"),registerBoolean("drillEquips[104].isCrafted"),registerInteger("DeprecatedBlueprints[101][8]"),registerBoolean("drillEquips[105].isCrafted"),registerInteger("DeprecatedBlueprints[102][8]"),registerBoolean("drillEquips[106].isCrafted"),registerInteger("DeprecatedBlueprints[103][8]"),registerBoolean("drillEquips[107].isCrafted"),registerInteger("DeprecatedBlueprints[104][8]"),registerBoolean("drillEquips[108].isCrafted"),registerInteger("DeprecatedBlueprints[105][8]"),registerBoolean("drillEquips[109].isCrafted"),registerInteger("totalTimeLapsedMinutes"),registerInteger("reactorComponents[22].numOwned"),registerInteger("reactorComponents[23].numOwned"),registerInteger("reactorComponents[24].numOwned"),registerInteger("reactorComponents[25].numOwned"),registerString("buffs.saveState"),registerInteger("whackosKilled"),registerInteger("reactor.totalRuntimeSecs"),registerInteger("bufflab.totalBuffsCasted"),registerInteger("bufflab.totalSecsBuffed"),registerInteger("worldResources[48].numOwned"),registerInteger("tradingPostStructure.level"),registerInteger("managerStructure.level"),registerInteger("metalDetectorStructure.level"),registerInteger("moonTradingPostStructure.level"),registerInteger("bufflab.maxConsecutiveSecondsBuffed"),registerInteger("chestCollectorStorageStructure.level"),registerInteger("chestCollectorChanceStructure.level"),registerInteger("chestService.chestsStored"),registerBoolean("paidForMinerName"),registerBoolean("drillEquips[110].isCrafted"),registerInteger("worldResources[49].numOwned"),registerInteger("worldResources[50].numOwned"),registerInteger("worldResources[51].numOwned"),registerInteger("reactorComponents[26].numOwned"),registerInteger("reactorComponents[27].numOwned"),registerInteger("reactorComponents[28].numOwned"),registerInteger("secondsSinceOrangeFishSpawn"),registerInteger("secondsUntilNextOrangeFishSpawn"),registerInteger("orangeFishCollected"),registerInteger("chestSpawnRoller.seed"),registerInteger("basicChestRewardRoller.seed"),registerInteger("goldenChestRewardRoller.seed"),registerInteger("scientistRoller.seed"),registerInteger("tradeRoller.seed"),registerInteger("caveRoller.seed"),registerInteger("coreMineralRoller.seed"),registerInteger("battleSpawnRoller.seed"),registerInteger("clickableRoller.seed"),registerInteger("relicFunctionalityRoller.seed"),registerInteger("userExperienceRoller.seed"),registerInteger("uxSeed"),registerString("caves[0].serializedSaveValue"),registerString("caves[1].serializedSaveValue"),registerString("caves[2].serializedSaveValue"),registerString("caves[3].serializedSaveValue"),registerString("caves[4].serializedSaveValue"),registerString("caves[5].serializedSaveValue"),registerString("caves[6].serializedSaveValue"),registerString("NO_LONGER_IN_USE"),registerString("NO_LONGER_IN_USE"),registerString("NO_LONGER_IN_USE"),registerString("NO_LONGER_IN_USE"),registerString("treasureStorage.serializedSaveValue"),registerInteger("caveMaxFuelStructure.level"),registerInteger("caveFuelRegenStructure.level"),registerString("currentDroneLevels.serializedSaveValue"),registerBoolean("hasFirstCaveSpawned"),registerInteger("numberOfRewardsCollected"),registerInteger("numberOfCavesExplored"),registerBoolean("hasCollectedTreasure"),registerInteger("splitTestValue1"),registerInteger("earliestVersion"),registerInteger("firstTimePlayed"),registerBoolean("isDevUser"),registerInteger("activePlayTimeMinutes"),registerInteger("totalPlayMinutes"),registerInteger("testNumber"),registerBoolean("drillEquips[111].isCrafted"),registerBoolean("drillEquips[112].isCrafted"),registerBoolean("drillEquips[113].isCrafted"),registerBoolean("drillEquips[114].isCrafted"),registerBoolean("drillEquips[115].isCrafted"),registerBoolean("drillEquips[116].isCrafted"),registerBoolean("drillEquips[117].isCrafted"),registerBoolean("drillEquips[118].isCrafted"),registerBoolean("drillEquips[119].isCrafted"),registerBoolean("drillEquips[120].isCrafted"),registerBoolean("drillEquips[121].isCrafted"),registerBoolean("drillEquips[122].isCrafted"),registerBoolean("drillEquips[123].isCrafted"),registerInteger("worldResources[52].numOwned"),registerInteger("worldResources[53].numOwned"),registerInteger("worldResources[54].numOwned"),registerInteger("worldResources[55].numOwned"),registerInteger("worldResources[56].numOwned"),registerInteger("worldResources[57].numOwned"),registerInteger("worldResources[58].numOwned"),registerInteger("worldResources[59].numOwned"),registerInteger("worldResources[60].numOwned"),registerInteger("worlds[2].workersHired"),registerInteger("worlds[2].workerLevel"),registerInteger("worldResources[61].numOwned"),registerInteger("worldResources[62].numOwned"),registerInteger("worldResources[63].numOwned"),registerInteger("worldResources[64].numOwned"),registerInteger("worldResources[65].numOwned"),registerInteger("worldResources[66].numOwned"),registerInteger("worldResources[66].numOwned"),registerIntArray("chestService.storedChests"),registerInteger("chestCompressorStructure.level"),registerInteger("numCavesCompleted"),registerInteger("numScientistsSacrificed"),registerString("questManager.saveState"),registerInteger("hasFoundUfo"),registerIntArray("savedReactorLayouts[0]"),registerIntArray("savedReactorLayouts[1]"),registerIntArray("savedReactorLayouts[2]"),registerIntArray("savedReactorLayouts[3]"),registerIntArray("savedReactorLayouts[4]"),registerIntArray("savedReactorLayouts[5]"),registerIntArray("savedReactorLayouts[6]"),registerIntArray("savedReactorLayouts[7]"),registerIntArray("savedReactorLayouts[8]"),registerIntArray("savedReactorLayouts[9]"),registerStringArray("savedReactorLayoutNames"),registerInteger("coreRelicRoller.seed"),registerInteger("coreScientistRoller.seed"),registerInteger("basicChestRewardRollerSeed"),registerInteger("goldenChestRewardRollerSeed"),registerInteger("tradeRollerSeed"),registerInteger("caveRollerSeed"),registerInteger("clickableRollerSeed"),registerInteger("chestSpawnRollerSeed"),registerString("lastPlatform"),registerBoolean("chestService.chestPopupEnabled"),registerString("superMinerManager.saveState"),registerInteger("NO_LONGER_IN_USE"),registerInteger("chestService.totalBlackChestsOpened"),registerInteger("worldResources[67].numOwned"),registerBoolean("hasSeenCaveTutorial"),registerInteger("superMinerManager.pendingSuperMiner"),registerInteger("chestCompressorTimeStructure.level"),registerInteger("chestCompressorSlotStructure.level"),registerString("chestCompressor.saveState"),registerInteger("blackChestRewardRoller.seed"),registerInteger("wizardRoller.seed"),registerBoolean("hasTakenSurvey"),registerBoolean("hasOpenedPurchaseWindow"),registerBoolean("superMinerManager.recievedInitialSuperMiner"),registerInteger("worldResources[68].numOwned"),registerInteger("previouslyActiveHolidayIndex"),registerInteger("lastFlashQuestionPromptClickTime"),registerString("offerManager.saveState"),console.log("Registered Save Mapping"),isSaveMappingSet=!0}function exportgame(){var e=getB64SaveText(),r=sids[chosen];prompt(_("Copy this text and keep it somewhere safe! Make sure you get all the text."),r+"|"+utf8_to_b64(e))}function exportgametext(){var e=getB64SaveText();return sids[chosen]+"|"+utf8_to_b64(e)}function importgame(){if(RSc<3&&0==lgame){var e=prompt(_("Please enter your export game save string"),""),r=(e=(e=e.replace(" ","")).replace("/(\r\n|\n|\r)/gm","")).split("|");-1==r[0].indexOf(" ")&&-1==r[0].indexOf("|")&&-1==r[0].indexOf(",")&&-1==r[0].indexOf(";")&&-1==r[0].indexOf("_")&&""!==r[1]&&null!==r[1]&&""!==r[2]&&null!==r[2]&&3==r.length?-1==RS.indexOf(r[0]+"|")?(createCookie(r[0],r[1]+"|"+r[2],30),createCookie("R",RS+r[0]+"|",30),RSc++,lgame=1,hasImported?localStorage.importedList=localStorage.importedList+r[0]+"|":localStorage.importedList=r[0]+"|",trackGenericEvent("imported",RSc),location.reload()):alert(_("There is already a savegame with the name {0}.  Please use another.",r[0])):alert(_("There is something wrong with your import code."))}}function showImportPopup(){RSc<3?showSimpleInput(_("Paste your import code below"),_("Import Game"),"",processImportCode.bind(this,isMobile()),"Exit"):alert(_("You have too many saves, delete one first."))}function processImportCode(e=!1){var r=document.getElementById("simpleInputFieldText").value;document.getElementById("simpleInputFieldText").value="",processImport(r,e)}function processImport(e,r=!1){if(RSc<3||r){var t=e.split("|"),i=t.splice(0,1),s=t.join("|");if(s.length>0&&""!=i&&(r||null===localStorage.getItem(i))||""==localStorage.getItem(i)){if(0==b64_to_utf8(s).length)return void alert(_("Error, import code is malformed. If this code was not from Steam MrMine it will not be compatible."));var n=b64_to_utf8(b64_to_utf8(s)).split("|")[9];if(isNaN(n))return void alert(_("Error, import does not have a version number."));if(parseInt(n)>version)return void alert(_("Error, the import version is from a newer version of the game, importing would result in loss of data. Import version: {0} Current version: {1}",n,version));localStorage[i]=s,r?(localStorage.R=i+"|",window.location.reload(!0)):(localStorage.R=i+"|"+localStorage.R,"steam"==platformName()?getCurrentWindow().reload():location.reload())}else alert(_("You already have a save with the name {0} delete that one first",i))}else alert(_("You have too many saves, delete one first."))}function createCookie(e,r,t){localStorage[e]=r}function getCookie(e){return localStorage[e]}function savegame(){if(!isSimulating&&isSaveFileLoaded()){savetime=servertime;var e=getB64SaveText();createCookie(sids[chosen],utf8_to_b64(e),30),platform.saveLocalStorageToFile&&"undefined"!=typeof cordova&&platform.saveLocalStorageToFile()}}function getB64SaveText(){return utf8_to_b64(generateSaveText())}function showExportPopup(){var e=getB64SaveText(),r=sids[chosen]+"|"+utf8_to_b64(e);showSimpleInput(_("Copy your export code below"),_("Copy And Close"),r,copyExportCodeAndClose,"Exit")}function copyExportCodeAndClose(){copyTextToClipboard(document.getElementById("simpleInputFieldText").value),hideSimpleInput()}registerVariablesToSave();var chosen=-1,sids,RS,RSc,saves;function loadSaves(){if(void 0!==localStorage.R){sids=localStorage.R.split("|"),saves=[];for(var e=0;e<sids.length;e++)""!=sids[e]&&(saves[e]=b64_to_utf8(b64_to_utf8(localStorage[sids[e]])).split("|"));RS=void 0!==localStorage.R?localStorage.R:"0",(RSc=void 0!==localStorage.R?localStorage.R.split("|").length-1:"0")>3&&(RSc=3)}else sids=[],RS="0",RSc="0",saves=[]}function loadGame(e){if(isGameReady){if(e<RSc){if(chosen=e,tutsection=-1,loadAllVariables(chosen),platform.playMusic(),isMobile()||(document.getElementById("WRAPPERD").style.background='url("Shared/Assets/UI/gui2.png")',document.getElementById("WRAPPERD").style.backgroundSize="100% 100%"),document.getElementById("TUTORIALD").style.visibility="hidden",document.getElementById("TUTORIALD").style.zIndex=-2,document.getElementById("TITLED").style.visibility="hidden",document.getElementById("TITLED").style.zIndex=-1,document.getElementById("TRANSIENTEFFECTSD").style.zIndex=1,activeLayers.WorldLayer=new WorldLayer({x:0,y:0,width:mainw,height:mainh}),activeLayers.Particles=new Particles({x:0,y:0,width:mainw,height:mainh}),activeLayers.MainUILayer=new MainUILayer({x:0,y:0,width:mainw,height:mainh}),activeLayers.Stage=new Stage({x:0,y:0,width:mainw,height:mainh}),isMobile()||(activeLayers.PinnedBlueprintsLayer=new PinnedBlueprintsLayer({x:0,y:0,width:mainw,height:mainh}),pinnedBlueprintsManager.update()),isMobile()&&(activeLayers.FooterUILayer=new FooterUILayer({x:0,y:mainh-mobileFooterH,width:mobileFooterW,height:mobileFooterH})),isDivVisible("CONFIRMATIOND"))for(var r in activeLayers)r.includes("confirmationLayer")&&activeLayers[r].boundingBox.width>0&&(activeLayers[r+"_new"]=activeLayers[r],activeLayers[r+"_new"].layerName=r+"_new",delete activeLayers[r]);if(limitedTimeEventManager.onGameLoad(),console.log("Seconds since last play: "+timeSinceLastPlay()),timeSinceLastPlay()>120)if(specialUpgrades[1]>0||managerStructure.level>0){var t=runOfflineProgress();openUi(OfflineProgress),getUiByName("offlineProgress").setOfflineProgressValues(t)}else isMobile()&&0==managerStructure.level?openUi(OfflineProgress):isPlayerReadyForPromo()&&openUi(PromoPopup);return-1==customMinerDatabaseIndex&&paidForMinerName&&handleNameSubmission(),isSimulating=!0,simulateCavesForTime(timeSinceLastPlay()),isSimulating=!1,updateCaveSystemSpawns(),playtime>60&&numGameLaunches++,platform.onGameLoaded(),trackEvent_LoadedGame(),isDevUser=isDevUser||isDev(),"armorgames"==platform.domain&&window.parent.postMessage({type:"consumeAll"},"https://19230.cache.armorgames.com"),isSteam()&&updateDiscordRichPresence(),superMinerManager.pendingSuperMiner&&openUi(SuperMinerBlackWindow,null,superMinerManager.getSuperMinerById(superMinerManager.pendingSuperMiner)),"undefined"!=typeof offerManager&&offerManager.update(),!0}return!1}}loadSaves();var isFirstSession=!1;function createNewGame(e){if(""==e&&(e=getFirstUnusedGameName()),RSc<3&&""!=e&&"R"!=e&&-1==RS.indexOf(e+"|")&&-1==e.indexOf(" ")&&-1==e.indexOf("|")&&-1==e.indexOf(",")&&-1==e.indexOf(";")&&-1==e.indexOf("_")){if(hideDiv("NEWGAME"),hideDiv("TITLED"),chosen=0,platform.playMusic(),createCookie("R",0!=RS?RS+e+"|":e+"|",30),sids[chosen]=e,initAvailableBlueprints(),savegame(),newNews(_("New game started ({0})",e),!0),isMobile()||(document.getElementById("WRAPPERD").style.background='url("Shared/Assets/UI/gui2.png")',document.getElementById("WRAPPERD").style.backgroundSize="100% 100%"),document.getElementById("TRANSIENTEFFECTSD").style.zIndex=1,activeLayers.WorldLayer=new WorldLayer({x:0,y:0,width:mainw,height:mainh}),activeLayers.Particles=new Particles({x:0,y:0,width:mainw,height:mainh}),activeLayers.MainUILayer=new MainUILayer({x:0,y:0,width:mainw,height:mainh}),activeLayers.Stage=new Stage({x:0,y:0,width:mainw,height:mainh}),isMobile()||(activeLayers.PinnedBlueprintsLayer=new PinnedBlueprintsLayer({x:0,y:0,width:mainw,height:mainh}),pinnedBlueprintsManager.update()),isMobile()&&(activeLayers.FooterUILayer=new FooterUILayer({x:0,y:mainh-mobileFooterH,width:mobileFooterW,height:mobileFooterH})),isDivVisible("CONFIRMATIOND"))for(var r in activeLayers)r.includes("confirmationLayer")&&activeLayers[r].boundingBox.width>0&&(activeLayers[r+"_new"]=activeLayers[r],activeLayers[r+"_new"].layerName=r+"_new",delete activeLayers[r]);limitedTimeEventManager.onGameLoad(),testNumber=latestTestNumber,performance.now?(updateUserProperties(),trackGenericEvent("createdGame",RSc,{time:performance.now()})):(updateUserProperties(),trackGenericEvent("createdGame",RSc)),0==RSc&&(isFirstSession=!0,logInstall())}else alert(_("Error, you cannot use that game name or the game may corrupt."))}function getFirstUnusedGameName(){for(var e=generateRandomeGameName();-1!=RS.indexOf(e+"|");)e=generateRandomeGameName();return e}function generateRandomeGameName(){var e=adjectives[rand(0,adjectives.length-1)],r=nouns[rand(0,nouns.length-1)];return e.charAt(0).toUpperCase()+e.slice(1)+r.charAt(0).toUpperCase()+r.slice(1)}function onClickDeleteSaveSlot(e){e<=RSc&&(pendingDeleteSlotIndex=e,document.getElementById("G"+e+"c").style.zIndex=5)}function hideDeletionConfirmationHitbox(){document.getElementById("G1c").style.zIndex=-1,document.getElementById("G2c").style.zIndex=-1,document.getElementById("G3c").style.zIndex=-1}function deleteGame(e){e<RSc&&(createCookie(sids[e],"",-1),createCookie("R",RS=RS.replace(sids[e]+"|",""),30),sids.splice(e,1),saves.splice(e,1),sids[5]="",saves[5]="",RSc--)}function checkUserCanSave(){var e=!!navigator.cookieEnabled;void 0!==navigator.cookieEnabled||e||(document.cookie="testcookie",e=-1!=document.cookie.indexOf("testcookie")),e&&(checks[2]=1),mainw>=mainh&&(checks[3]=1),mainw>500&&mainh>500&&(checks[5]=1),checks[6]=1}function getAllSaveNames(){if(null!=localStorage.getItem("R")){for(var e=localStorage.R.split("|"),r=[],t=0;t<e.length;t++){var i=e[t];""!=i&&r.push(i)}return r}}function updateBackup(){needsFullBackup()&&generateBackupOfAllSaves()}function needsFullBackup(){return null==localStorage.getItem("backupDate")||currentTime()-parseInt(localStorage.getItem("backupDate"))>864e5}function generateBackupOfAllSaves(){var e="",r=getAllSaveNames();if(null!=r&&0!=r.length){for(var t=0;t<r.length;t++){var i=r[t];e+=i+"|"+localStorage[i]+"|"}var s=LZString.compress(e);console.log("All Saves Backed Up"),localStorage.backup=s,localStorage.backupDate=currentTime(),backupSavesToCloud("longTerm")}}var saveBackupFileName="SaveBackup.txt",currentBackupTerm="shortTerm",currentBackups={shortTerm:{},longTerm:{}};function backupSavesToCloud(e="shortTerm"){platform.isUserCloudEnabled()&&(currentBackupTerm=e,downloadBackup(updateCloudBackup,updateCloudBackup))}function downloadBackup(e=null,r=null){if(platform.isUserCloudEnabled()){greenworks.readTextFromFile(saveBackupFileName,(function(r){console.log("Downloaded Backup Text"),currentBackups=JSON.parse(r),e&&e()}),(function(e){console.log("Error: "+e),r&&r()}))}}function updateCloudBackup(){var e=getAllSaveNames();if(null!=e&&0!=e.length){for(var r=0;r<e.length;r++){var t=e[r];currentBackups[currentBackupTerm].hasOwnProperty(t)?console.log("Updating Save Backup: "+t):console.log("Adding Save To Backup: "+t),currentBackups[currentBackupTerm][t]=t+"|"+localStorage[t],currentBackups[currentBackupTerm][t+"_time"]=currentTime()}greenworks.saveTextToFile(saveBackupFileName,JSON.stringify(currentBackups),(function(){console.log("Saves ("+currentBackupTerm+") Backed Up"),currentBackupTerm="shortTerm"}),(function(e){console.log("ERROR! Saves ("+currentBackupTerm+") Backed Up Failed"),console.log("Details: "+e),currentBackupTerm="shortTerm"}))}}function displayCloudBackups(){if(null==document.getElementById("cloudBackupsUI")){var e=document.createElement("div");e.id="cloudBackupsUI",e.style.position="absolute",e.style.width="500px",e.style.height="400px",e.style.zIndex=10,e.style.visibility="visible",e.style.left="50%",e.style.marginLeft="-250px",e.style.top="50%",e.style.marginTop="-200px",e.style.border="1px solid white",e.style.background="black",e.style.color="white",e.innerHTML=_("<center><u>Your Cloud Backups</u></center>"),document.body.appendChild(e);var r=document.createElement("div");r.id="cloudBackupsUIExitButton",r.style.position="absolute",r.style.top="0px",r.style.right="0px",r.style.width="25px",r.style.height="25px",r.style.zIndex=4,r.style.background="url('Shared/Assets/UI/closei.png') no-repeat center",r.style.color="white",r.style.display="block",r.style.padding="0px",r.style.cursor="pointer",r.onclick=function(){document.getElementById("cloudBackupsUI").visibility="hidden",document.body.removeChild(document.getElementById("cloudBackupsUI"))},e.appendChild(r);var t=document.createElement("div");for(var i in t.id="backupOptionsHolder",t.style.position="absolute",t.style.top="30px",t.style.left="0px",t.style.width="100%",t.style.height="360px",t.style.overflowY="scroll",t.style.zIndex=3,e.appendChild(t),currentBackups.shortTerm)i.includes("_time")||addBackupEntry(i,currentBackups.shortTerm[i],currentBackups.shortTerm[i+"_time"]);for(var i in currentBackups.longTerm)i.includes("_time")||addBackupEntry(i,currentBackups.longTerm[i],currentBackups.longTerm[i+"_time"])}}function addBackupEntry(e,r,t){var i=document.createElement("div"),s="backupEntry_"+e+"_"+t;i.id=s,i.style.width="350px",i.style.height="90px",i.style.padding="0px 0px 0px 0px",i.style.display="inline-block",i.style.marginTop="3px",i.style.marginBottom="3px",i.style.marginLeft="5px",i.style.overflow="hidden",i.style.border="1px solid white",i.style.background="#222222",i.style.color="white",i.style.cursor="pointer",i.style.opacity=.75,i.style.fontSize="12px",i.onmouseover=function(){this.style.opacity=1,showTooltipForDiv(_("Click To Copy"),_("Click to copy save data which can then be used to import the game."),s)},i.onmouseout=function(){this.style.opacity=.8,hideTooltip()},i.onclick=function(){copyTextToClipboard(r),setTimeout((function(){alert(_("Save Import Text Copied To Clipboard"))}),100)};var n=document.createElement("div");n.style.width="340px",n.style.height="80px",n.style.overflow="hidden",n.style.display="inline-block",n.style.padding="3px 3px 3px 3px";var a=timeStampToDate(t),o=getSaveDetails(r);o.money.includes(".")&&(o.money=o.money.substring(0,o.money.indexOf(".")));var l=_("Depth")+": "+o.depth+"km<br>"+_("Money")+": "+beautifynum(new BigNumber(o.money));n.innerHTML=e+"<br>"+l+"<br>"+a;var g=document.createElement("div");g.style.width="80px",g.style.height="89px",g.style.overflow="hidden",g.style.display="inline-block",g.style.padding="1px 1px 1px 1px",g.innerHTML="<input type='button' style='cursor: pointer; font-size: 10px; background: url(\"Shared/Assets/UI/big_button.png\") no-repeat scroll 0 0 transparent; border: 0px; background-size: 100% 100%; height: 34px; width: 78px; white-space: normal; word-wrap: break-word;' value='"+_("Import game")+"' onmouseover='showTooltip(\""+_("Import game")+"\", \"\")' onmouseout='hideTooltip();' onmouseup='processImport(\""+r+"\");'>",i.appendChild(n),document.getElementById("backupOptionsHolder").appendChild(i),document.getElementById("backupOptionsHolder").appendChild(g)}function onCloudSaveImportClicked(e){processImport(e)}function isSaveFileLoaded(){return void 0!==chosen&&chosen>=0}