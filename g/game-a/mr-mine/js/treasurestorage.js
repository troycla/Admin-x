const MAX_STORED_TREASURE=36;class TreasureStorage{treasure=[];store(e){this.isFull()?newNews(_("You could not collect a reward because your treasure storage is full!")):(this.treasure.push(e),++numberOfRewardsCollected)}grantAndRemove(e){hasCollectedTreasure=!0,this.treasure.length>e&&(this.treasure[e].grant(),this.treasure.splice(e,1))}isFull(){return this.treasure.length>=MAX_STORED_TREASURE}set serializedSaveValue(value){var values=""===value?[]:value.split(",");if(this.treasure=[],values.length>1)for(var j=0;j<values.length;j+=3){var newReward=eval("new "+values[j]+"()");newReward.loadRewardAmount(values[j+1]),newReward.caveDepth=values[j+2],newReward.locationNode=null,this.treasure.push(newReward)}}get serializedSaveValue(){let e=[];for(var r=0;r<this.treasure.length;r++)e.push(this.treasure[r].constructor.name),e.push(this.treasure[r].rewardAmount),e.push(this.treasure[r].caveDepth);return e.join(",")}}