class ChestService{chests=[];numChests=0;chestRewardText="";foundGoldChest=!1;chestsStored=0;storedChests=[];totalBasicChestsOpened=0;totalGoldChestsOpened=0;totalBlackChestsOpened=0;totalMoneyFromChests=0;baseBasicChestsPerGoldChest=50;chestPopupEnabled=!0;getTotalChests(){return this.chests.reduce((e=>++e),0)}hasUnclaimedChests(){return this.getTotalChests()>0}getChestsAtDepth(e){return this.chests.filter((t=>t.depth==e))}getChest(e,t=-1){for(var s=0;s<this.chests.length;s++){let h=this.chests[s];if(h.depth==e&&(-1==t||h.worker==t))return h}}chestExistsAtDepth(e){return this.getChestsAtDepth(e).length>0}removeAllChests(){this.chests=[]}removeChestsBySource(e){this.chests=this.chests.filter((t=>t.source!=e.name))}removeChest(e,t){this.chests=this.chests.filter((s=>s.depth!=e||s.worker!=t))}forEachChest(e){this.chests.forEach(e)}userHasFoundGoldenChest(){return this.foundGoldChest}getChestRewardText(){return this.chestRewardText}getAvailableMiners(e){for(var t=[],s=workersHiredAtDepth(e);s>0;s--)this.getChest(e,s)||t.push(s);return t}spawnRandomChests(){for(var e=Math.floor(depth/10),t=3;t<=e;t++)this.rollForBasicChest()&&this.spawnChestAtRandomDepth(Chest.natural)}rollForBasicChest(e=0){var t;return t=depth<1e3?3e3+(depth-300)/2:depth/1e3*3350,Math.floor(chestSpawnRoller.randFloat()*t)<(2*worldAtDepth(0).workersHired+1)*(STAT.chestSpawnFrequencyMultiplier()+e)}spawnChestAtRandomDepth(e){var t=rand(1,depth),s=this.getAvailableMiners(t),h=s[rand(0,s.length-1)];!isDepthWithoutWorkers(t)&&!BattleManager.isActiveBossLevel(t)&&h?this.spawnChest(t,e,this.rollForSpecialChest(),h):0!=rand(0,2)&&this.spawnChestAtRandomDepth(e)}spawnChest(e,t=Chest.natural,s=ChestType.basic,h=-1){var r=(t==Chest.natural||t==Chest.superminer)&&!this.isChestCollectorFull(),o=chestSpawnRoller.rand(1,100)<=this.getStoredChestsChance();let a=(this.chests.length+1)/(depth/10);var l=t!=Chest.natural||!chestSpawnRoller.boolean(a);if(r&&o)return this.storeChest(s),!0;if(l){if(h<0||this.getChest(e,h)||h>workersHiredAtDepth(e)){var i=this.getAvailableMiners(e);h=i[rand(0,i.length-1)]}if(h){var C=t.new(t,e,h,s);return this.chests.push(C),C}}return!1}rollForSpecialChest(){let e=randRoundToInteger(1580*STAT.goldChestSpawnFrequencyMultiplier()),t=chestSpawnRoller.rand(0,e)<=10;return chestSpawnRoller.rand(0,7900)<=10?ChestType.black:t?ChestType.gold:ChestType.basic}presentChest(e,t=-1){let s=this.getChest(e,t);void 0===s&&metalDetectorStructure.level>=5&&(s=this.getChestsAtDepth(e)[0]),isSimulating||keysPressed.Shift||!chestService.chestPopupEnabled?activeLayers.Chest||(this.giveChestReward(s),newNews(_("You got {0} from a Chest!",chestService.getChestRewardText()),!0),trackEvent_FoundChest(s.type)):(openUiWithoutClosing(ChestWindow,null,s),trackEvent_FoundChest(s.type))}giveChestReward(e,t=!0){e.type==ChestType.gold?(this.foundGoldChest=!0,this.chestRewardText=goldChestRewards.rollForRandomReward(),this.totalGoldChestsOpened++):e.type==ChestType.black?(this.chestRewardText=blackChestRewards.rollForRandomReward(),this.totalBlackChestsOpened++):e.type==ChestType.basic&&(this.chestRewardText=basicChestRewards.rollForRandomReward(),this.totalBasicChestsOpened++),this.removeChest(e.depth,e.worker),t&&savegame()}storeChest(e){this.storedChests[e]?this.storedChests[e]++:this.storedChests[e]=1}grantStoredChest(e){this.storedChests[e]>0&&(this.storedChests[e]--,chestService.spawnChest(0,Chest.metaldetector,e),chestService.presentChest(0))}getMaxStoredChests(){return chestCollectorStorageStructure.level>0?chestCollectorStorageStructure.statValueForCurrentLevel():0}getTotalStoredChests(){var e=0;for(var t in this.storedChests)e+=this.storedChests[t];return e}getStoredChestsOfType(e){return this.storedChests[e]?this.storedChests[e]:0}isChestCollectorFull(){return this.getMaxStoredChests()<=this.getTotalStoredChests()}getStoredChestsChance(){return chestCollectorStorageStructure.level>0?chestCollectorChanceStructure.statValueForCurrentLevel():0}migrateDeprecatedChestStorage(){for(var e=0;e<this.chestsStored;++e)this.storeChest(this.rollForSpecialChest());this.chestsStored=0}testChestCollector(e){var t=0;this.storedChests=[];for(var s=0;s<e&&(t++,this.spawnChestAtRandomDepth(Chest.natural),!this.isChestCollectorFull());++s);console.log(this.storedChests),console.log(this.getTotalStoredChests()/t),this.removeChestsBySource(Chest.natural)}testChestSpawnsForTime(e){var t=[[],[],[]];chestCollectorChanceStructure.level=10,chestCollectorChanceStructure.leveledStats[0].perLvlValue[9]=100,chestCollectorStorageStructure.level=10,chestCollectorStorageStructure.leveledStats[0].perLvlValue[9]=1e4;for(var s=2*e,h=0;h<200;h++){this.chests=[],this.storedChests[0]=0,this.storedChests[1]=0,this.storedChests[2]=0;for(var r=0;r<s;r++)this.spawnRandomChests();t[0][h]=this.storedChests[0],t[1][h]=this.storedChests[1],t[2][h]=this.storedChests[2]}console.log("average chest spawns for "+e+" minutes"),console.log("basic chests: "+calculateAverageOfArray(t[0])),console.log("golden chests: "+calculateAverageOfArray(t[1])),console.log("ethereal chests: "+calculateAverageOfArray(t[2]))}}const chestService=new ChestService;