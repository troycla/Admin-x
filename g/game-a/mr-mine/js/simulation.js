var isSimulating=!1,simDepth=0,totalSims=0,currentSim=-1,rows=[];class GameSimulator{minutesBetweenInteractions=10;maxSteps=-1;chestOpenChance=1;goldChestOpenChanceWithMetalDetector=1;chestOpenPeriod=10;autosellAll=!0;allowSleep=!1;csvOutput="";isLoggingCsv=!1;useDynamicInteractions=!1;runTime=0;totalTime=0;lastChestOpenTime=0;constructor(e){this.minutesBetweenInteractions=e}runForTime(e){for(isSimulating=!0,this.totalTime=e,bossesDefeated=99999,hasLaunched=2,this.runTime=0,this.csvOutput="TIME MIN,DEPTH\r\n";this.runTime<e;)this.runStep(),this.isLoggingCsv&&(this.csvOutput+=this.runTime+","+depth+"\r\n"),console.log((100*this.runTime/e).toFixed(2)+"%");isSimulating=!1}runUntilCondition(e){let t=(rows=JSON.parse(localStorage.getItem("simData"))).map((e=>JSON.parse(e)));(rows=t)[0]&&rows[0][totalSims-currentSim-1]&&(rows[0][totalSims-currentSim-1]=Math.floor(currentTime()/1e3)),isSimulating=!0,bossesDefeated=99999,hasLaunched=2,this.runTime=0;for(var r=0,i=parseInt(localStorage.simDepth),a=0;!e()&&(this.maxSteps<0||r<this.maxSteps);){++r,this.runStep();let e=100*(depth/i).toFixed(2);e>a+2&&(a=e,console.log(`sim ${totalSims-currentSim}/${totalSims} - depth ${depth}/${i} - ${e}% completed - steps until failure ${r}/${Math.floor(i**1.4)}`))}isSimulating=!1,rows[1]&&rows[1][totalSims-currentSim-1]&&(rows[1][totalSims-currentSim-1]=Math.floor(currentTime()/1e3)),t=rows.map((e=>{if(e)for(var t=0;t<e.length;t++)void 0===e[t]&&e[t];return JSON.stringify(e)})),"0"==localStorage.numSims?(console.log("***********************"),console.log(`SIM COMPLETED - MET CONDITION = ${depth>=i}`),console.log("***********************"),this.downloadCsv()):(rows=t,localStorage.setItem("simData",JSON.stringify(rows)),setTimeout((()=>{location.reload()}),3e3))}runStep(){var e=0,t=this.runTime%1440>960;if(this.useDynamicInteractions&&(this.minutesBetweenInteractions=Math.max(1,Math.floor(depth**.42))),this.allowSleep&&t){timelapse(480,!1),playtime+=28800,this.runTime+=480}else{if(this.totalTime>0)var r=Math.min(this.minutesBetweenInteractions,this.totalTime-this.runTime);else r=this.minutesBetweenInteractions;for(;e<r;){timelapse(1,!1);for(var i=0;i<60;i++)updateUserExperience();simulateCavesForTime(60),this.simulateChestSpawns(),this.openAnyChests(),spawnWorldClickables(),battlerand(),spawnWorldClickables(),battlerand(),this.craftGems();for(i=highestOreUnlocked;i<worldResources.length;i++)!worldResources[i].isIsotope&&worldResources[i].isOnHeader&&worldResources[i].numOwned>0&&highestOreUnlocked<i&&(highestOreUnlocked=i);checkForNewTrade(),e+=1,savetime+=60}this.runTime+=r,playtime+=60*r,buffs.update(),buffs.activeBuffs.length>0&&buffs.activeBuffs.forEach((e=>{e.pausedDuringTimelapse&&4!=e.id&&(e.millisecondsRemaining=0)}))}depth>=50&&(hasFoundGolem=1,hasFoundGidget=1,initAvailableBlueprints()),questManager.update(),questManager.grantRewardsForCompletedQuests(),this.cachedBlueprints=getKnownBlueprints().filter((e=>6!=e.category)),depth>1135&&this.simulateReactor(this.minutesBetweenInteractions),this.clickAllClickables(),this.updateCaves(),this.checkTrades(),this.updateScientists(),this.craftAllUpgrades(),this.purchaseAllUpgrades(),this.checkBattles(),this.simulateCompressor(),this.updateSuperMiners(),this.sellMineralsToReachCapacity()}updateSuperMiners(){let e=[];depth>=10&&!superMinerManager.recievedInitialSuperMiner&&(blackChestRewards.rollForRandomReward(),chestService.totalBlackChestsOpened++,superMinerManager.recievedInitialSuperMiner=!0);for(var t=superMinerManager.numSuperMiners();t<e.length&&!(depth<e[t].depth);t++)if(superMinerManager.slots++,e[t].superMinerId){let r=superMinerManager.getSuperMinerById(e[t].superMinerId);superMinerManager.addSuperMiner(r)}else if(e[t].type){let r=superMinerManager.baseSuperMiners.filter((r=>r.type==e[t].type));e[t].rarity&&(r=r.filter((r=>r.rarity==e[t].rarity)));let i=r[rand(0,r.length-1)];superMinerManager.addSuperMiner(i)}else if(e[t].rarity){let r=superMinerManager.baseSuperMiners.filter((r=>r.rarity==e[t].rarity)),i=r[rand(0,r.length-1)];superMinerManager.addSuperMiner(i)}let r=superMinerManager.currentSuperMiners.length>2?superMinerManager.currentSuperMiners.sort(((e,t)=>e.rarity.id-t.rarity.id)):superMinerManager.currentSuperMiners;if(superMinerManager.pendingSuperMiner){let e=superMinerManager.getSuperMinerById(superMinerManager.pendingSuperMiner);if(e.type==superMinerTypes.CHEST)return e.scrap(),void superMinerManager.removePendingSuperMiner();superMinerManager.slots>superMinerManager.numSuperMiners()?(superMinerManager.addSuperMiner(e),superMinerManager.removePendingSuperMiner()):superMinerManager.canUpgradeSlot()?(superMinerManager.upgradeSlots(),superMinerManager.addSuperMiner(e),superMinerManager.removePendingSuperMiner()):r.length>2&&e.rarity.id>r[0].rarity.id?(superMinerManager.currentSuperMiners[0].scrap(),superMinerManager.addSuperMiner(e),superMinerManager.removePendingSuperMiner()):(e.scrap(),superMinerManager.removePendingSuperMiner())}for(t=superMinerManager.numSuperMiners()-1;t>=0;t--){let e=r[t];Math.random()<.05&&e.onButtonPress(),e.canLevel()&&e.getLevelCost()<superMinerManager.nextSlotCost()/4&&e.type!=superMinerTypes.EGG&&e.rarity!=superMinerRarities.common&&e.levelUp(),e.type==superMinerTypes.EGG&&10==e.level&&e.scrap()}}simulateCompressor(){depth>100&&chestCollectorChanceStructure.level<1&&(chestCollectorChanceStructure.level=1,chestCollectorStorageStructure.level=1,learnRangeOfBlueprints(3,8,9)),chestCompressorStructure.level>0&&(chestCompressor.canQueueChest(ChestType.black)?chestCompressor.addChestToQueue(ChestType.black):chestCompressor.canQueueChest(ChestType.gold)&&chestCompressor.addChestToQueue(ChestType.gold))}craftAllUpgrades(){var e=filterBlueprintsByCategory(this.cachedBlueprints,2),t=filterBlueprints(e,(e=>!e.craftedItem.item.isAtMaxLevel())).length>0,r=this.cachedBlueprints;t&&r.filter((e=>2!=e.category));for(var i=r.length-1;i>=0;--i){let e=r[i];if(e.levels&&e.levels.length>1)for(var a=0;a<e.levels.length;a++){let t=e.craftedItem.item.getCurrentLevel();if(t<a){let r=getIngredientListWithDiscounts(e.levels[t].ingredients);craftBlueprint(e.category,e.id,a,r)}}else if(canCraftBlueprint(e.category,e.id,0,null,!0))craftBlueprint(e.category,e.id),flagBlueprintAsSeen(e.category,e.id);else if(0==e.category&&depth>1400){let t=discountedIngredients.length,r=0,a=!1;for(i=0;i<t;i++)ingredient.item.hasQuantity(ingredient.quantity)&&r++,ingredient.item instanceof MineralCraftingItem&&worldResources[worldingredient.item.id]>maxHoldingCapacity()&&(a=!0);if(t-r==1&&a){for(var i in console.log("crafted a wonk drill part that has a higher requirement than capacity"),ingredients)ingredients[i].item.spendQuantity(ingredients[i].quantity);e.craftedItem.item.grantQuantity(e.craftedItem.quantity)}}}}purchaseAllUpgrades(){var e;depth>=1257&&learnRangeOfBlueprints(1,79,87);for(var t=0;t<=Math.floor(depth/1032);++t)(e=worlds[t]).workersHired<e.workerHireCosts.length-1&&e.workerHireCost()?this.canAffordUpgradeWithMineralValue(e.workerHireCost())&&hireMiner(t):e.workersHired>=10&&e.workerLevel+1<=e.workerLevelCosts.length&&e.workerUpgradeCost()&&this.canAffordUpgradeWithMineralValue(e.workerUpgradeCost())&&upgradeMiners(t);depth>=303&&(oilrigStructure.level=12)}simulateChestSpawns(){for(var e=Math.floor(depth/5),t=3;t<=e;t++)if(this.canOpenBasicChest()&&chestService.rollForBasicChest()){let e=chestService.rollForSpecialChest();!chestService.isChestCollectorFull()&&chestSpawnRoller.rand(1,100)<=chestService.getStoredChestsChance()?chestService.storeChest(e):e==ChestType.basic?(basicChestRewards.rollForRandomReward(),chestService.totalBasicChestsOpened++):this.canOpenGoldenChest()&&e==ChestType.gold?(goldChestRewards.rollForRandomReward(),chestService.totalGoldChestsOpened++):e==ChestType.black&&(blackChestRewards.rollForRandomReward(),chestService.totalBlackChestsOpened++)}this.sellMineralsToReachCapacity()}openAnyChests(){var e=e=>{e==ChestType.gold?(goldChestRewards.rollForRandomReward(),chestService.totalGoldChestsOpened++,chestService.storedChests[ChestType.gold]--):e==ChestType.black?(blackChestRewards.rollForRandomReward(),chestService.totalBlackChestsOpened++,chestService.storedChests[ChestType.black]--):(basicChestRewards.rollForRandomReward(),chestService.totalBasicChestsOpened++,chestService.storedChests[ChestType.basic]--)};chestService.storedChests[0]>30&&e(0),chestService.storedChests[1]>15&&e(1),chestService.storedChests[2]>0&&e(2)}canOpenGoldenChest(){return metalDetectorStructure.level>0&&Math.random()<this.goldChestOpenChanceWithMetalDetector}canOpenBasicChest(){return Math.random()<this.chestOpenChance}clickAllClickables(){for(var e in removeExpiredClickables(),worldClickables)for(;worldClickables[e];)onClickedMineralDeposit(worldClickables[e])}checkTrades(){[[earthTradeOffer1,earthTradeOffer2],[moonTradeOffer1,moonTradeOffer2]].forEach(((e,t)=>{if(isTradeAvailable(e[0])&&canMakeTrade(e[0])&&e[0][TRADE_INDEX_REWARD_TYPE]!=TRADE_TYPE_RELIC){if(e[0][TRADE_INDEX_PAYMENT_TYPE]==TRADE_TYPE_ORE&&lockedMineralAmtsToSave[e[0][TRADE_INDEX_PAYMENT_SUBTYPE]]>0)return;return totalCompletedTrades++,void makeTrade(t,e[0])}}))}canAffordUpgradeWithMineralValue(e){return!!money.greaterThanOrEqualTo(e)||!!money.add(this.getValueOfMineralsExcludingLocked()).greaterThanOrEqualTo(e)&&(this.sellMineralsToReachMoneyAmount(e),!0)}getValueOfMineralsExcludingLocked(){for(var e=new BigNumber(0),t=1;t<worldResources.length;t++){let r=lockedMineralAmtsToSave[t]?lockedMineralAmtsToSave[t]:0;e=e.add(Math.max(0,parseInt(worldResources[t].numOwned-r))).multiply(worldResources[t].sellValue)}return e}getValueOfLockedMinerals(){for(var e=new BigNumber(0),t=1;t<worldResources.length;t++)lockedMineralAmtsToSave[t]&&(e=e.add(lockedMineralAmtsToSave[t].multiply(worldResources[t].sellValue)));return e}cachedLockedBlueprints=[];cachedForDepth=-1;lockMineralsForBlueprints(){for(var e=0;e<lockedMineralAmtsToSave.length;e++)lockedMineralAmtsToSave[e]=0;var t;for(e=1;e<worldResources.length;e++)worldResources[e].isIsotope&&(lockedMineralAmtsToSave[e]=Math.floor(maxHoldingCapacity()/125));depth>this.cachedForDepth?(t=(t=filterBlueprintsByCategoryAndLevel(this.cachedBlueprints,1)).filter((e=>{var t=!0;return e.ingredients.forEach((e=>{if(e.item instanceof MineralCraftingItem){let r=worldResources[e.item.id];(r.isIsotope&&r.index>highestIsotopeUnlocked||!r.isIsotope&&r.index>highestOreUnlocked)&&(t=!1)}})),t})),depth>1e3&&(t=t.filter((e=>{depth<1e3||getDrillEquipByBlueprintId(e.id).wattagePercentIncrease()>40||getDrillEquipByBlueprintId(e.id).capacity})).sort(((e,t)=>{Number(e.craftedItem.item.getCostRelativeToIncrease()),Number(t.craftedItem.item.getCostRelativeToIncrease())}))).length>0&&getDrillEquipByBlueprintId(t[t.length-1].id).capacity>0&&(t=[t.pop()].concat(t))):t=this.cachedLockedBlueprints;var r=depth<1300?t.length:Math.min(3,t.length);for(e=0;e<r;e++){for(var i=new BigNumber(0),a=t[0].ingredients[0].item instanceof MoneyCraftingItem?1:0,s=t[e].ingredients.length,n=a;n<s;n++)t[e].ingredients[n].quantity&&(i=i.add(t[e].ingredients[n].quantity));if(i.lessThan(maxHoldingCapacity())){for(n=a;n<t[e].ingredients.length;n++){let r=t[e].ingredients[n].item.id,i=!0;if(r&&money.lessThan(t[0].ingredients[0].quantity)&&!worldResources[r].isIsotope&&worldResources[r].totalValue()>doBigNumberDecimalMultiplication(t[0].ingredients[0].quantity,.1)&&(i=!1),i&&worldResources[r]){let i=Math.max(Number(t[e].ingredients[n].quantity),lockedMineralAmtsToSave[r]);lockedMineralAmtsToSave[r]=i}}break}}}simulateReactor(e){if(reactorStructure.level=5,0==reactor.grid.cachedMaxBatteryCapacity&&(reactor.learnReactorBlueprintsForLevel(),getKnownBlueprints(6)[12].craftedItem.item.grantQuantity(81),reactor.grid.grid=[[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13],[13,13,13,13,13,13,13,13,13]],reactor.grid.cachedMaxBatteryCapacity=reactor.grid.maxBatteryCapacity()),worldResources[NUCLEAR_ENERGY_INDEX].numOwned+=1e5*e,depth>1320){let e=Math.random();e>.9&&(einsteinium1.numOwned+=10),e>.95&&(einsteinium2.numOwned+=10),depth>1400&&e>.97&&(einsteinium3.numOwned+=10,fermium1.numOwned++,depth>1550&&(fermium2.numOwned++,depth>1600&&e>.99&&fermium3.numOwned++))}let t=buffsPurchaseOptions.filter((e=>0==e.buffId||4==e.buffId||5==e.buffId&&e.energyCost>=7e5));for(;worldResources[NUCLEAR_ENERGY_INDEX].numOwned>1e7&&t.length>0;){let e=t[rand(0,t.length-1)];e.canPurchase()&&e.purchase()}}sellMineralsToReachMoneyAmount(e){if(this.autosellAll)this.sellAllMinerals();else{this.lockMineralsForBlueprints();for(var t=1;money.lessThan(e)&&t<worldResources.length;)worldResources[t].sellValue.greaterThan(0)&&sellMineral(t),++t}}sellMineralsToReachCapacity(){if(this.autosellAll)maxHoldingCapacity()<=capacity&&this.sellAllMinerals();else{this.lockMineralsForBlueprints();for(var e=1;maxHoldingCapacity()<=capacity&&e<worldResources.length;)worldResources[e].sellValue.greaterThan(0)&&sellMineral(e),++e}}sellAllMinerals(){for(var e in this.lockMineralsForBlueprints(),worldResources)sellMineral(e)}has15Relics=!1;divinedRelics=0;updateScientists(){if(depth>1e3)for(var e=0;e<10;e++)equippedRelics[e]=19;for(var t=e=>[3,10,12,13,21,22,23,25,26,27,28,31,33,35,36,37,38,39,45,47,48,49,50,51,52].includes(e),r=0;r<numActiveScientists();r++)if(isOnActiveExcavation(r)){if(isScientistDead(r))onClickBuryScientist(r);else if(isExcavationDone(r))if(excavationRewards[activeExcavations[r][0]].isRelic){let e=excavationRewards[activeExcavations[r][0]].id;isRelicInventoryFull()||getNumOfEquippedRelicsWithId(e)>=5||t(e)?forfeitRewardForFinishedExcavation(r,!0):claimRewardForFinishedExcavation(r)}else claimRewardForFinishedExcavation(r)}else{let e=this.has15Relics?25:85;excavationChoices[r][1][2]>e?startExcavation(r,0):startExcavation(r,rand(0,1))}if(this.has15Relics){let e=Math.floor((depth-1e3)/(100/(depth/1e3)));for(;this.divinedRelics<e;)excavationRewards[equippedRelics[e-1]].divineId&&(equippedRelics[e-1]=excavationRewards[equippedRelics[e-1]].divineId)}else this.has15Relics=15==equippedRelics.filter((e=>-1!=e)).length}caveRewards=0;updateCaves(){let e=getActiveCaves();for(var t=0;t<e.length;t++){let u=e[t],h=u.getAllChildNodesFromRoot().filter((e=>getActiveCaves()[0].getIndexOfRewardsOnNode(e).length>0)).sort(((e,t)=>e.depth-t.depth));for(;u.currentFuel>=200&&h.length>0;){var r=[droneBlueprints[0],droneBlueprints[2]],i=getDroneById(r[rand(0,1)].craftedItem.item.id),a=i.speedMultiplierLevels[i.level],s=i.totalFuel/i.fuelUseLevels[i.level]/CAVE_SYSTEM_DURATION_PER_NODE_SECONDS*a,n=h.filter((e=>Math.floor(e.depth/2)<s)),l=n[Math.max(0,rand(0,n.length-1))],o=h[Math.max(0,rand(0,h.length-1))],c=l||o,d=u.getPathToNode(c);u.startDroneOnPath(i,d),h=h.filter((e=>e!=c))}}treasureStorage.treasure.forEach(((e,t)=>{treasureStorage.grantAndRemove(t),this.caveRewards++}))}checkBattles(){battleWaiting.length>0&&(depthOfMonster=battleWaiting[1],preparebattle(battleWaiting[2],battleWaiting[3]),monsterMaxHP/getTotalDps()<userMaxHP/monsterAtk?(wonBattle(),battleWaiting=[]):battleWaiting=[])}craftGems(){if(!(depth<304)){var e=filterBlueprintsByCategory(this.cachedBlueprints,2);if(0!=(e=filterBlueprints(e,(e=>!e.craftedItem.item.isAtMaxLevel()))).length)for(var t=[RED_FORGED_GEM_INDEX,BLUE_FORGED_GEM_INDEX,GREEN_FORGED_GEM_INDEX,PURPLE_FORGED_GEM_INDEX,YELLOW_FORGED_GEM_INDEX],r=0;r<t.length;r++)worldResources[t[r]].numOwned<50&&GemForger.canQueueGem(t[r])&&GemForger.addGemToQueue(t[r])}}initSnapshot(){getUsedMineralCapacity(),this.mineralsBeforeMine=new BigNumber(capacity),isCapacityFull()||(isTakingSnapshot=!0,valueBefore=getValueOfMineralsExcludingHe3())}finishSnapshot(e){getUsedMineralCapacity(),mineralsMined.shift(),mineralsMined.push(new BigNumber(capacity).subtract(this.mineralsBeforeMine).divide(600*e));var t=getValueOfMineralsExcludingHe3().subtract(valueBefore).divide(600*e);singleMiningLoopValueSnapshot.push(t),singleMiningLoopValueSnapshot.length>10&&singleMiningLoopValueSnapshot.splice(0,1),timesSinceSnapshot=0,valueBefore=new BigNumber(0),isTakingSnapshot=!1}downloadCsv(){let e=[];for(var t=0;t<rows.length;t++)rows[t]?e[t]=rows[t]:e[t]=[];let r=e.map((e=>e.join(","))).join("\n");saveContentToFile(`dist/D${simDepth}-S${totalSims}-T${Math.floor(currentTime()/1e3/60)}.csv`,r)}}function runDepthSim(e,t){if(void 0!==localStorage.numSims&&0!=localStorage.numSims||(localStorage.totalSims=t,localStorage.numSims=t,localStorage.simDepth=e,localStorage.simData=JSON.stringify(new Array(e+4).fill(JSON.stringify(new Array(t).fill("0"))))),t>0){simDepth=e,totalSims=localStorage.totalSims,currentSim=t-1,localStorage.numSims=currentSim,deleteGame(0),createNewGame("sim");var r=new GameSimulator;r.autosellAll=!1,r.isLoggingCsv=!0,r.allowSleep=!1,r.maxSteps=Math.floor(e**1.4),r.useDynamicInteractions=!0,r.chestOpenChance=1,r.runUntilCondition((()=>{if(depth>=e)return!0}))}}