class CaveSystem{isActive=!0;isExplored=!1;totalDuration=0;remainingSeconds=0;currentFuel;kmDepth;caveTreeDepth;rootNode;rewards=[];initialVisibleDepth=2;hasAnyRewards=!1;hasScientist=!1;hasGoldChest=!1;hasDroneBlueprint=!1;droneBlueprintRewardId=-1;maxNodesPerDepth;currentLeaves=[];activeDrones=[];constructor(e,t,r){this.kmDepth=e,this.caveTreeDepth=t,this.maxNodesPerDepth=r,this.currentFuel=caveMaxFuelStructure.statValueForCurrentLevel(),this.buildTree(),this.totalDuration=Math.max(CAVE_MINIMUM_LIFETIME_SECONDS,CAVE_SYSTEM_DURATION_PER_NODE_SECONDS*this.numNodes()),this.remainingSeconds=this.totalDuration}set serializedSaveValue(value){var values=""===value?[]:value.split("!");this.currentLeaves=[],this.activeDrones=[],this.rewards=[],this.isActive="true"===values[0],this.kmDepth=parseInt(values[1]),this.caveTreeDepth=parseInt(values[2]),this.remainingSeconds=parseInt(values[3]),this.totalDuration=parseInt(values[4]),this.currentFuel=parseInt(values[5]),"true"!==values[6]&&"false"!==values[6]?(this.isExplored=!1,values.splice(6,0,"false")):this.isExplored="true"===values[6];for(var nodeSaveValues=values[7].split(","),nodesToAssign=[],j=0;j<nodeSaveValues.length;j+=8){var newNode=eval("new "+nodeSaveValues[j]+"()");newNode.x=parseFloat(nodeSaveValues[j+1]),newNode.y=parseFloat(nodeSaveValues[j+2]),newNode.depth=parseInt(nodeSaveValues[j+3]),newNode.difficulty=parseFloat(nodeSaveValues[j+4]),newNode.id=nodeSaveValues[j+5],newNode.currentHealth=nodeSaveValues[j+6],newNode.isRevealed=nodeSaveValues[j+7],nodesToAssign.push(newNode)}for(var j=0;j<nodesToAssign.length;j++)for(var parentNode=nodesToAssign[j],k=0;k<nodesToAssign.length;k++)nodesToAssign[k].id.length==parentNode.id.length+1&&0==nodesToAssign[k].id.indexOf(parentNode.id)&&(nodesToAssign[k].parent=parentNode,parentNode.children.push(nodesToAssign[k]));this.rootNode=nodesToAssign[0];var rewardSaveValues=values[8].split(",");if(rewardSaveValues.length>1)for(var j=0;j<rewardSaveValues.length;j+=5){var newReward=eval("new "+rewardSaveValues[j]+"()");newReward.locationNode=this.getNodeById(rewardSaveValues[j+1]),newReward.loadRewardAmount(rewardSaveValues[j+2]),newReward.caveDepth=rewardSaveValues[j+3],newReward.isClaimed="true"===rewardSaveValues[j+4],this.rewards.push(newReward)}var droneSaveValues=values[9].split(",");if(droneSaveValues.length>1)for(var j=0;j<droneSaveValues.length;j+=12){var baseDrone=getDroneById(droneSaveValues[j+0]),dronePath=this.getPathToNode(this.getNodeById(droneSaveValues[j+1])),level=droneSaveValues[j+9],newActiveDrone=new ActiveDrone(baseDrone,this,dronePath,level);newActiveDrone.lastReachedNodeIndex=parseInt(droneSaveValues[j+2]),newActiveDrone.progressToNextNode=parseFloat(droneSaveValues[j+3]),newActiveDrone.isMovingForward="true"===droneSaveValues[j+4],newActiveDrone.currentHealth=parseFloat(droneSaveValues[j+5]),newActiveDrone.currentFuel=parseFloat(droneSaveValues[j+6]),newActiveDrone.waitAtNodeTime=parseFloat(droneSaveValues[j+7]),newActiveDrone.elapsedTime=parseFloat(droneSaveValues[j+8]),newActiveDrone.inventory=droneSaveValues[j+10].split("*"),1==newActiveDrone.inventory.length&&""==newActiveDrone.inventory[0]&&(newActiveDrone.inventory=[]),newActiveDrone.claimedRewards=droneSaveValues[j+11].split("*"),1==newActiveDrone.claimedRewards.length&&""==newActiveDrone.claimedRewards[0]&&(newActiveDrone.claimedRewards=[]),this.activeDrones.push(newActiveDrone)}}get serializedSaveValue(){let e=[];e.push(this.isActive),e.push(this.kmDepth),e.push(this.caveTreeDepth),e.push(Math.round(this.remainingSeconds)),e.push(this.totalDuration),e.push(Math.round(this.currentFuel)),e.push(this.isExplored);for(var t=[],r=this.getAllChildNodesFromRoot(),s=0;s<r.length;s++)t.push(r[s].constructor.name),t.push(r[s].x),t.push(r[s].y),t.push(r[s].depth),t.push(r[s].difficulty),t.push(r[s].id),void 0!==r[s].currentHealth?t.push(r[s].currentHealth):t.push(""),t.push(r[s].isRevealed);e.push(t.join(","));var a=[];for(s=0;s<this.rewards.length;s++)a.push(this.rewards[s].constructor.name),null==this.rewards[s].locationNode?a.push(""):a.push(this.rewards[s].locationNode.id),a.push(this.rewards[s].rewardAmount),a.push(this.rewards[s].caveDepth),a.push(this.rewards[s].isClaimed);e.push(a.join(","));var i=[];for(s=0;s<this.activeDrones.length;s++)i.push(this.activeDrones[s].baseDroneId),i.push(this.activeDrones[s].idOfFinalNodeInPath()),i.push(this.activeDrones[s].lastReachedNodeIndex),i.push(this.activeDrones[s].progressToNextNode),i.push(this.activeDrones[s].isMovingForward),i.push(this.activeDrones[s].currentHealth),i.push(this.activeDrones[s].currentFuel),i.push(this.activeDrones[s].waitAtNodeTime),i.push(this.activeDrones[s].elapsedTime),i.push(this.activeDrones[s].level),i.push(this.activeDrones[s].inventory.join("*")),i.push(this.activeDrones[s].claimedRewards.join("*"));return e.push(i.join(",")),e.join("!")}update(e){if(this.isActive){for(var t=this.activeDrones.length-1;t>=0;--t){try{this.activeDrones[t].update(e)}catch(e){console.warn("Drone "+t+" ("+this.kmDepth+"km) failed to update."),console.warn(e)}this.activeDrones[t].isAlive&&!this.activeDrones[t].isFinished||this.activeDrones.splice(t,1)}this.addFuel(e/60*caveFuelRegenStructure.statValueForCurrentLevel()*STAT.fuelRegenMultiplier()),this.remainingSeconds-=e,this.remainingSeconds<=0&&(this.isActive=!1)}}addFuel(e){this.currentFuel=Math.min(caveMaxFuelStructure.statValueForCurrentLevel(),this.currentFuel+e)}startDroneOnPath(e,t){if(this.canCraftDrone(e)){this.currentFuel-=e.totalFuel;var r=new ActiveDrone(e,this,t);return this.activeDrones.push(r),this.isExplored||(this.isExplored=!0,++numberOfCavesExplored),r}return null}canCraftDrone(e){return this.currentFuel>=e.totalFuel}buildTree(){this.rootNode=new CaveNode,this.rootNode.x=0,this.rootNode.y=.5,this.rootNode.depth=0,this.rootNode.isRevealed=!0,this.currentLeaves.push(this.rootNode);for(var e=0;e<this.caveTreeDepth;)this.addNodeDepth(e+1),e++;this.forEachNode(this.populateNode.bind(this),!0)}addNodeDepth(e){var t=shuffleArray(this.currentLeaves.slice());this.currentLeaves=[];for(var r=caveRoller.rand(1,this.maxNodesPerDepth),s=0;s<t.length;s++){var a=Math.max(0,r-Math.floor((this.currentLeaves.length-s)/4)),i=0;a>0&&(i=caveRoller.rand(1,a));for(var n=0;n<i;n++){var o=new CaveNode;o.x=e/this.caveTreeDepth,o.depth=e,o.id=n,o.parent=t[s],o.parent.children.push(o),o.id=o.parent.id+n,e<=this.initialVisibleDepth&&(o.isRevealed=!0),this.currentLeaves.push(o)}r-=i}t.sort((function(e,t){return e.y>t.y?1:e.y<t.y?-1:0}));var h=0,d=1/Math.pow(2,this.currentLeaves.length),l=1/6;for(s=0;s<t.length;s++)for(n=0;n<t[s].children.length;n++)t[s].children[n].y=h/this.currentLeaves.length+d,t[s].children[n].y+=(1-caveRoller.rand(0,2))*l/2/(this.currentLeaves.length+d),t[s].children[n].x+=(1-caveRoller.rand(0,2))*l/2/this.caveTreeDepth,h++}populateNode(e){if(e!=this.rootNode)switch(this.hasAnyRewards||e.depth!=this.caveTreeDepth?e.isTerminal()?this.selectWeightedRandomType(caveConfig.terminalNodeTypeChances):this.selectWeightedRandomType(caveConfig.nonterminalNodeTypeChances):"reward"){case"obstacle":var t=this.createRandomObstacle();this.replaceNode(e,t);break;case"reward":this.createRewardOnNode(e)}}createRandomObstacle(){var e={},t=!1;for(var r in caveConfig.obstacles)this.kmDepth>=caveConfig.obstacles[r].minKmDepth&&(e[r]=caveConfig.obstacles[r],t=!0);if(t)return new(e[this.selectWeightedRandomType(e)].constructor)}createRewardOnNode(e){var t,r={},s=!1,a=this.getPathDifficulty(this.getPathToNode(e));for(var i in caveConfig.rewards)!(a>=caveConfig.rewards[i].difficultyThreshold)||"scientist"==i&&this.hasScientist||"goldChest"==i&&this.hasGoldChest||!("drone"!=i||!this.hasBlueprint&&(t=this.selectDroneBlueprintRewardId())>=0)||(r[i]=caveConfig.rewards[i],s=!0);if(s){var n,o=this.selectWeightedRandomType(r);return"drone"!=o?((n=new r[o].constructor(e,this.kmDepth)).setRewardAmount(a,e.depth,this.kmDepth),e.difficulty-=n.difficultyReduction,"scientist"==o?this.hasScientist=!0:"goldChest"==o&&(this.hasGoldChest=!0)):((n=new r[o].constructor(e)).setRewardAmount(t),this.hasBlueprint=!0,this.droneBlueprintRewardId=t),this.rewards.push(n),this.hasAnyRewards=!0,n}}replaceNode(e,t){for(var r in t.children=e.children,t.id=e.id,t.parent=e.parent,t.x=e.x,t.y=e.y,t.depth=e.depth,t.isRevealed=e.isRevealed,e.parent&&(e.parent.children[e.id[e.id.length-1]]=t),e.children)e.children[r].parent=t}isFinished(){for(var e in this.rewards)if(!this.rewards[e].activateOnPickup&&null!==this.rewards[e].locationNode)return!1;for(var e in this.activeDrones)if(this.activeDrones[e].inventory.length>0)return!1;return this.isFullyRevealed()}isFullyRevealed(e=null){if(e||(e=this.rootNode),!e.isRevealed)return!1;for(var t in e.children)if(!this.isFullyRevealed(e.children[t]))return!1;return!0}collapse(){for(var e in caves)caves[e].kmDepth==this.kmDepth&&(this.isActive=!1,caves[e]=createCaveSystem(0,0,1),caves[e].isActive=!1,newNews(_("The cave at {0}km has collapsed",this.kmDepth)),mutebuttons||caveCollapseAudio.play())}getTravelDistanceBetweenParentAndChildNode(e,t,r,s){var a=e.y;null!=e.parent&&(a=e.parent.y);for(var i=e.x,n=e.y,o=t.x,h=t.y,d=h-n,l=a-n,u=e.x+.25/this.caveTreeDepth,v=n-.25*l,c=e.x+.75/this.caveTreeDepth,p=h-.25*d,w=0,D={x:i*r,y:n*s},f=0;f<500;f++){var g=getBezierXY((f+1)/501,i*r,n*s,u*r,v*s,c*r,p*s,o*r,h*s);w+=Math.sqrt(Math.pow(g.x-D.x,2)+Math.pow(g.y-D.y,2)),D=g}var N=Math.sqrt(Math.pow((e.x-t.x)*r,2)+Math.pow((e.y-t.y)*s,2));return w=Math.max(w,N)}getRewardsOnNode(e){for(var t=[],r=this.getIndexOfRewardsOnNode(e),s=0;s<r.length;s++)t.push(this.rewards[r[s]]);return t}getDronesOnNode(e){var t=[];for(var r in this.activeDrones)this.activeDrones[r].isAlive&&this.activeDrones[r].nodePath[this.activeDrones[r].lastReachedNodeIndex]==e&&t.push(this.activeDrones[r]);return t}getIndexOfRewardsOnNode(e){var t=[];for(var r in this.rewards)this.rewards[r].locationNode==e&&t.push(r);return t}getNodeById(e){if(""==e)return null;for(var t=this.rootNode,r=1;r<e.length;++r){if(isNaN(e[r])||e[r]>=t.children.length)throw"Invalid node ID";t=t.children[e[r]]}return t}getAllChildNodesFromRoot(){return this.getAllChildNodesFromNode(this.rootNode)}getAllChildNodesFromNode(e){var t=[e];if(e.children.length>0)for(var r=0;r<e.children.length;r++)t=t.concat(this.getAllChildNodesFromNode(e.children[r]));return t}numNodes(){return this.getAllChildNodesFromRoot().length}getPathToNode(e){for(var t=[];e!=this.rootNode;)t.unshift(e),e=e.parent;return t.unshift(this.rootNode),t}getPathDifficulty(e){var t=0;for(var r in e)t+=e[r].difficulty;return t}selectDroneBlueprintRewardId(){var e,t=getActiveCaves();for(var r in caveConfig.rewards.drone.possibleIds){var s=caveConfig.rewards.drone.possibleIds[r];if(!isBlueprintKnown(craftingCategories.drones,s)){for(var a in e=!1,t)if(t[a].droneBlueprintRewardId==s){e=!0;break}if(!e)return s}}return-1}forEachNode(e,t,r=null){for(var s in r||(r=this.rootNode),t&&e(r),r.children)this.forEachNode(e,t,r.children[s]);t||e(r)}selectWeightedRandomType(e){var t=0;for(var r in e)t+=e[r].probability;var s=caveRoller.randFloat(),a=0;for(var r in e)if(s<(a+=e[r].probability/t))return r;return null}getRandomPath(){for(var e=this.rootNode,t=[e];e.children.length>0;)e=e.children[caveRoller.rand(0,e.children.length-1)],t.push(e);return t}}